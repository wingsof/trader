// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stock_provider.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_stock_5fprovider_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_stock_5fprovider_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_stock_5fprovider_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_stock_5fprovider_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_stock_5fprovider_2eproto;
namespace stock_api {
class CodeList;
class CodeListDefaultTypeInternal;
extern CodeListDefaultTypeInternal _CodeList_default_instance_;
class CybosBidAskTickData;
class CybosBidAskTickDataDefaultTypeInternal;
extern CybosBidAskTickDataDefaultTypeInternal _CybosBidAskTickData_default_instance_;
class CybosDayData;
class CybosDayDataDefaultTypeInternal;
extern CybosDayDataDefaultTypeInternal _CybosDayData_default_instance_;
class CybosDayDatas;
class CybosDayDatasDefaultTypeInternal;
extern CybosDayDatasDefaultTypeInternal _CybosDayDatas_default_instance_;
class CybosSubjectTickData;
class CybosSubjectTickDataDefaultTypeInternal;
extern CybosSubjectTickDataDefaultTypeInternal _CybosSubjectTickData_default_instance_;
class CybosTickData;
class CybosTickDataDefaultTypeInternal;
extern CybosTickDataDefaultTypeInternal _CybosTickData_default_instance_;
class PastMinuteQuery;
class PastMinuteQueryDefaultTypeInternal;
extern PastMinuteQueryDefaultTypeInternal _PastMinuteQuery_default_instance_;
class SimulationArgument;
class SimulationArgumentDefaultTypeInternal;
extern SimulationArgumentDefaultTypeInternal _SimulationArgument_default_instance_;
class StockCodeQuery;
class StockCodeQueryDefaultTypeInternal;
extern StockCodeQueryDefaultTypeInternal _StockCodeQuery_default_instance_;
class StockQuery;
class StockQueryDefaultTypeInternal;
extern StockQueryDefaultTypeInternal _StockQuery_default_instance_;
}  // namespace stock_api
PROTOBUF_NAMESPACE_OPEN
template<> ::stock_api::CodeList* Arena::CreateMaybeMessage<::stock_api::CodeList>(Arena*);
template<> ::stock_api::CybosBidAskTickData* Arena::CreateMaybeMessage<::stock_api::CybosBidAskTickData>(Arena*);
template<> ::stock_api::CybosDayData* Arena::CreateMaybeMessage<::stock_api::CybosDayData>(Arena*);
template<> ::stock_api::CybosDayDatas* Arena::CreateMaybeMessage<::stock_api::CybosDayDatas>(Arena*);
template<> ::stock_api::CybosSubjectTickData* Arena::CreateMaybeMessage<::stock_api::CybosSubjectTickData>(Arena*);
template<> ::stock_api::CybosTickData* Arena::CreateMaybeMessage<::stock_api::CybosTickData>(Arena*);
template<> ::stock_api::PastMinuteQuery* Arena::CreateMaybeMessage<::stock_api::PastMinuteQuery>(Arena*);
template<> ::stock_api::SimulationArgument* Arena::CreateMaybeMessage<::stock_api::SimulationArgument>(Arena*);
template<> ::stock_api::StockCodeQuery* Arena::CreateMaybeMessage<::stock_api::StockCodeQuery>(Arena*);
template<> ::stock_api::StockQuery* Arena::CreateMaybeMessage<::stock_api::StockQuery>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace stock_api {

// ===================================================================

class StockCodeQuery :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.StockCodeQuery) */ {
 public:
  StockCodeQuery();
  virtual ~StockCodeQuery();

  StockCodeQuery(const StockCodeQuery& from);
  StockCodeQuery(StockCodeQuery&& from) noexcept
    : StockCodeQuery() {
    *this = ::std::move(from);
  }

  inline StockCodeQuery& operator=(const StockCodeQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline StockCodeQuery& operator=(StockCodeQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StockCodeQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StockCodeQuery* internal_default_instance() {
    return reinterpret_cast<const StockCodeQuery*>(
               &_StockCodeQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StockCodeQuery& a, StockCodeQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(StockCodeQuery* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StockCodeQuery* New() const final {
    return CreateMaybeMessage<StockCodeQuery>(nullptr);
  }

  StockCodeQuery* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StockCodeQuery>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StockCodeQuery& from);
  void MergeFrom(const StockCodeQuery& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StockCodeQuery* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.StockCodeQuery";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
  };
  // string code = 1;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // @@protoc_insertion_point(class_scope:stock_api.StockCodeQuery)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class CodeList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.CodeList) */ {
 public:
  CodeList();
  virtual ~CodeList();

  CodeList(const CodeList& from);
  CodeList(CodeList&& from) noexcept
    : CodeList() {
    *this = ::std::move(from);
  }

  inline CodeList& operator=(const CodeList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CodeList& operator=(CodeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CodeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CodeList* internal_default_instance() {
    return reinterpret_cast<const CodeList*>(
               &_CodeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CodeList& a, CodeList& b) {
    a.Swap(&b);
  }
  inline void Swap(CodeList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CodeList* New() const final {
    return CreateMaybeMessage<CodeList>(nullptr);
  }

  CodeList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CodeList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CodeList& from);
  void MergeFrom(const CodeList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CodeList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.CodeList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodelistFieldNumber = 1,
  };
  // repeated string codelist = 1;
  int codelist_size() const;
  private:
  int _internal_codelist_size() const;
  public:
  void clear_codelist();
  const std::string& codelist(int index) const;
  std::string* mutable_codelist(int index);
  void set_codelist(int index, const std::string& value);
  void set_codelist(int index, std::string&& value);
  void set_codelist(int index, const char* value);
  void set_codelist(int index, const char* value, size_t size);
  std::string* add_codelist();
  void add_codelist(const std::string& value);
  void add_codelist(std::string&& value);
  void add_codelist(const char* value);
  void add_codelist(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& codelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_codelist();
  private:
  const std::string& _internal_codelist(int index) const;
  std::string* _internal_add_codelist();
  public:

  // @@protoc_insertion_point(class_scope:stock_api.CodeList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> codelist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class StockQuery :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.StockQuery) */ {
 public:
  StockQuery();
  virtual ~StockQuery();

  StockQuery(const StockQuery& from);
  StockQuery(StockQuery&& from) noexcept
    : StockQuery() {
    *this = ::std::move(from);
  }

  inline StockQuery& operator=(const StockQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline StockQuery& operator=(StockQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StockQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StockQuery* internal_default_instance() {
    return reinterpret_cast<const StockQuery*>(
               &_StockQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StockQuery& a, StockQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(StockQuery* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StockQuery* New() const final {
    return CreateMaybeMessage<StockQuery>(nullptr);
  }

  StockQuery* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StockQuery>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StockQuery& from);
  void MergeFrom(const StockQuery& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StockQuery* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.StockQuery";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kFromDatetimeFieldNumber = 2,
    kUntilDatetimeFieldNumber = 3,
  };
  // string code = 1;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // .google.protobuf.Timestamp from_datetime = 2;
  bool has_from_datetime() const;
  private:
  bool _internal_has_from_datetime() const;
  public:
  void clear_from_datetime();
  const PROTOBUF_NAMESPACE_ID::Timestamp& from_datetime() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_from_datetime();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_from_datetime();
  void set_allocated_from_datetime(PROTOBUF_NAMESPACE_ID::Timestamp* from_datetime);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_from_datetime() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_from_datetime();
  public:

  // .google.protobuf.Timestamp until_datetime = 3;
  bool has_until_datetime() const;
  private:
  bool _internal_has_until_datetime() const;
  public:
  void clear_until_datetime();
  const PROTOBUF_NAMESPACE_ID::Timestamp& until_datetime() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_until_datetime();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_until_datetime();
  void set_allocated_until_datetime(PROTOBUF_NAMESPACE_ID::Timestamp* until_datetime);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_until_datetime() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_until_datetime();
  public:

  // @@protoc_insertion_point(class_scope:stock_api.StockQuery)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  PROTOBUF_NAMESPACE_ID::Timestamp* from_datetime_;
  PROTOBUF_NAMESPACE_ID::Timestamp* until_datetime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class PastMinuteQuery :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.PastMinuteQuery) */ {
 public:
  PastMinuteQuery();
  virtual ~PastMinuteQuery();

  PastMinuteQuery(const PastMinuteQuery& from);
  PastMinuteQuery(PastMinuteQuery&& from) noexcept
    : PastMinuteQuery() {
    *this = ::std::move(from);
  }

  inline PastMinuteQuery& operator=(const PastMinuteQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline PastMinuteQuery& operator=(PastMinuteQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PastMinuteQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PastMinuteQuery* internal_default_instance() {
    return reinterpret_cast<const PastMinuteQuery*>(
               &_PastMinuteQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PastMinuteQuery& a, PastMinuteQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(PastMinuteQuery* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PastMinuteQuery* New() const final {
    return CreateMaybeMessage<PastMinuteQuery>(nullptr);
  }

  PastMinuteQuery* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PastMinuteQuery>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PastMinuteQuery& from);
  void MergeFrom(const PastMinuteQuery& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PastMinuteQuery* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.PastMinuteQuery";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kTodayFieldNumber = 3,
    kCountOfDaysFieldNumber = 2,
  };
  // string code = 1;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // .google.protobuf.Timestamp today = 3;
  bool has_today() const;
  private:
  bool _internal_has_today() const;
  public:
  void clear_today();
  const PROTOBUF_NAMESPACE_ID::Timestamp& today() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_today();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_today();
  void set_allocated_today(PROTOBUF_NAMESPACE_ID::Timestamp* today);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_today() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_today();
  public:

  // uint32 count_of_days = 2;
  void clear_count_of_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 count_of_days() const;
  void set_count_of_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count_of_days() const;
  void _internal_set_count_of_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:stock_api.PastMinuteQuery)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  PROTOBUF_NAMESPACE_ID::Timestamp* today_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_of_days_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class SimulationArgument :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.SimulationArgument) */ {
 public:
  SimulationArgument();
  virtual ~SimulationArgument();

  SimulationArgument(const SimulationArgument& from);
  SimulationArgument(SimulationArgument&& from) noexcept
    : SimulationArgument() {
    *this = ::std::move(from);
  }

  inline SimulationArgument& operator=(const SimulationArgument& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulationArgument& operator=(SimulationArgument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulationArgument& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SimulationArgument* internal_default_instance() {
    return reinterpret_cast<const SimulationArgument*>(
               &_SimulationArgument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SimulationArgument& a, SimulationArgument& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulationArgument* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulationArgument* New() const final {
    return CreateMaybeMessage<SimulationArgument>(nullptr);
  }

  SimulationArgument* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulationArgument>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SimulationArgument& from);
  void MergeFrom(const SimulationArgument& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulationArgument* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.SimulationArgument";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromDatetimeFieldNumber = 1,
  };
  // .google.protobuf.Timestamp from_datetime = 1;
  bool has_from_datetime() const;
  private:
  bool _internal_has_from_datetime() const;
  public:
  void clear_from_datetime();
  const PROTOBUF_NAMESPACE_ID::Timestamp& from_datetime() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_from_datetime();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_from_datetime();
  void set_allocated_from_datetime(PROTOBUF_NAMESPACE_ID::Timestamp* from_datetime);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_from_datetime() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_from_datetime();
  public:

  // @@protoc_insertion_point(class_scope:stock_api.SimulationArgument)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::Timestamp* from_datetime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class CybosDayData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.CybosDayData) */ {
 public:
  CybosDayData();
  virtual ~CybosDayData();

  CybosDayData(const CybosDayData& from);
  CybosDayData(CybosDayData&& from) noexcept
    : CybosDayData() {
    *this = ::std::move(from);
  }

  inline CybosDayData& operator=(const CybosDayData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CybosDayData& operator=(CybosDayData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CybosDayData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CybosDayData* internal_default_instance() {
    return reinterpret_cast<const CybosDayData*>(
               &_CybosDayData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CybosDayData& a, CybosDayData& b) {
    a.Swap(&b);
  }
  inline void Swap(CybosDayData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CybosDayData* New() const final {
    return CreateMaybeMessage<CybosDayData>(nullptr);
  }

  CybosDayData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CybosDayData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CybosDayData& from);
  void MergeFrom(const CybosDayData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CybosDayData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.CybosDayData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDateFieldNumber = 1,
    kTimeFieldNumber = 2,
    kStartPriceFieldNumber = 3,
    kHighestPriceFieldNumber = 4,
    kLowestPriceFieldNumber = 5,
    kClosePriceFieldNumber = 6,
    kVolumeFieldNumber = 7,
    kAmountFieldNumber = 8,
    kCumSellVolumeFieldNumber = 9,
    kCumBuyVolumeFieldNumber = 10,
    kForeignerHoldVolumeFieldNumber = 11,
    kInstitutionBuyVolumeFieldNumber = 13,
    kInstitutionCumBuyVolumeFieldNumber = 14,
    kForeignerHoldRateFieldNumber = 12,
  };
  // uint32 date = 1;
  void clear_date();
  ::PROTOBUF_NAMESPACE_ID::uint32 date() const;
  void set_date(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_date() const;
  void _internal_set_date(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 time = 2;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start_price = 3;
  void clear_start_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_price() const;
  void set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_price() const;
  void _internal_set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 highest_price = 4;
  void clear_highest_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 highest_price() const;
  void set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_highest_price() const;
  void _internal_set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 lowest_price = 5;
  void clear_lowest_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 lowest_price() const;
  void set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lowest_price() const;
  void _internal_set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 close_price = 6;
  void clear_close_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 close_price() const;
  void set_close_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_close_price() const;
  void _internal_set_close_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 volume = 7;
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 amount = 8;
  void clear_amount();
  ::PROTOBUF_NAMESPACE_ID::uint64 amount() const;
  void set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_amount() const;
  void _internal_set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 cum_sell_volume = 9;
  void clear_cum_sell_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_sell_volume() const;
  void set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_sell_volume() const;
  void _internal_set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 cum_buy_volume = 10;
  void clear_cum_buy_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_buy_volume() const;
  void set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_buy_volume() const;
  void _internal_set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 foreigner_hold_volume = 11;
  void clear_foreigner_hold_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 foreigner_hold_volume() const;
  void set_foreigner_hold_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_foreigner_hold_volume() const;
  void _internal_set_foreigner_hold_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 institution_buy_volume = 13;
  void clear_institution_buy_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 institution_buy_volume() const;
  void set_institution_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_institution_buy_volume() const;
  void _internal_set_institution_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 institution_cum_buy_volume = 14;
  void clear_institution_cum_buy_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 institution_cum_buy_volume() const;
  void set_institution_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_institution_cum_buy_volume() const;
  void _internal_set_institution_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // float foreigner_hold_rate = 12;
  void clear_foreigner_hold_rate();
  float foreigner_hold_rate() const;
  void set_foreigner_hold_rate(float value);
  private:
  float _internal_foreigner_hold_rate() const;
  void _internal_set_foreigner_hold_rate(float value);
  public:

  // @@protoc_insertion_point(class_scope:stock_api.CybosDayData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 date_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 highest_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lowest_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 close_price_;
  ::PROTOBUF_NAMESPACE_ID::uint64 volume_;
  ::PROTOBUF_NAMESPACE_ID::uint64 amount_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_sell_volume_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_buy_volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 foreigner_hold_volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 institution_buy_volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 institution_cum_buy_volume_;
  float foreigner_hold_rate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class CybosDayDatas :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.CybosDayDatas) */ {
 public:
  CybosDayDatas();
  virtual ~CybosDayDatas();

  CybosDayDatas(const CybosDayDatas& from);
  CybosDayDatas(CybosDayDatas&& from) noexcept
    : CybosDayDatas() {
    *this = ::std::move(from);
  }

  inline CybosDayDatas& operator=(const CybosDayDatas& from) {
    CopyFrom(from);
    return *this;
  }
  inline CybosDayDatas& operator=(CybosDayDatas&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CybosDayDatas& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CybosDayDatas* internal_default_instance() {
    return reinterpret_cast<const CybosDayDatas*>(
               &_CybosDayDatas_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CybosDayDatas& a, CybosDayDatas& b) {
    a.Swap(&b);
  }
  inline void Swap(CybosDayDatas* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CybosDayDatas* New() const final {
    return CreateMaybeMessage<CybosDayDatas>(nullptr);
  }

  CybosDayDatas* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CybosDayDatas>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CybosDayDatas& from);
  void MergeFrom(const CybosDayDatas& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CybosDayDatas* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.CybosDayDatas";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDayDataFieldNumber = 1,
  };
  // repeated .stock_api.CybosDayData day_data = 1;
  int day_data_size() const;
  private:
  int _internal_day_data_size() const;
  public:
  void clear_day_data();
  ::stock_api::CybosDayData* mutable_day_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::stock_api::CybosDayData >*
      mutable_day_data();
  private:
  const ::stock_api::CybosDayData& _internal_day_data(int index) const;
  ::stock_api::CybosDayData* _internal_add_day_data();
  public:
  const ::stock_api::CybosDayData& day_data(int index) const;
  ::stock_api::CybosDayData* add_day_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::stock_api::CybosDayData >&
      day_data() const;

  // @@protoc_insertion_point(class_scope:stock_api.CybosDayDatas)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::stock_api::CybosDayData > day_data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class CybosSubjectTickData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.CybosSubjectTickData) */ {
 public:
  CybosSubjectTickData();
  virtual ~CybosSubjectTickData();

  CybosSubjectTickData(const CybosSubjectTickData& from);
  CybosSubjectTickData(CybosSubjectTickData&& from) noexcept
    : CybosSubjectTickData() {
    *this = ::std::move(from);
  }

  inline CybosSubjectTickData& operator=(const CybosSubjectTickData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CybosSubjectTickData& operator=(CybosSubjectTickData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CybosSubjectTickData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CybosSubjectTickData* internal_default_instance() {
    return reinterpret_cast<const CybosSubjectTickData*>(
               &_CybosSubjectTickData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CybosSubjectTickData& a, CybosSubjectTickData& b) {
    a.Swap(&b);
  }
  inline void Swap(CybosSubjectTickData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CybosSubjectTickData* New() const final {
    return CreateMaybeMessage<CybosSubjectTickData>(nullptr);
  }

  CybosSubjectTickData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CybosSubjectTickData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CybosSubjectTickData& from);
  void MergeFrom(const CybosSubjectTickData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CybosSubjectTickData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.CybosSubjectTickData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kCodeFieldNumber = 4,
    kCompanyNameFieldNumber = 5,
    kTickDateFieldNumber = 1,
    kTimeFieldNumber = 2,
    kBuyOrSellFieldNumber = 6,
    kVolumeFieldNumber = 7,
    kTotalVolumeFieldNumber = 8,
    kForeignerTotalVolumeFieldNumber = 9,
  };
  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string code = 4;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // string company_name = 5;
  void clear_company_name();
  const std::string& company_name() const;
  void set_company_name(const std::string& value);
  void set_company_name(std::string&& value);
  void set_company_name(const char* value);
  void set_company_name(const char* value, size_t size);
  std::string* mutable_company_name();
  std::string* release_company_name();
  void set_allocated_company_name(std::string* company_name);
  private:
  const std::string& _internal_company_name() const;
  void _internal_set_company_name(const std::string& value);
  std::string* _internal_mutable_company_name();
  public:

  // .google.protobuf.Timestamp tick_date = 1;
  bool has_tick_date() const;
  private:
  bool _internal_has_tick_date() const;
  public:
  void clear_tick_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& tick_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_tick_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_tick_date();
  void set_allocated_tick_date(PROTOBUF_NAMESPACE_ID::Timestamp* tick_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_tick_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_tick_date();
  public:

  // uint32 time = 2;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool buy_or_sell = 6;
  void clear_buy_or_sell();
  bool buy_or_sell() const;
  void set_buy_or_sell(bool value);
  private:
  bool _internal_buy_or_sell() const;
  void _internal_set_buy_or_sell(bool value);
  public:

  // uint64 volume = 7;
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 total_volume = 8;
  void clear_total_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 total_volume() const;
  void set_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_volume() const;
  void _internal_set_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 foreigner_total_volume = 9;
  void clear_foreigner_total_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 foreigner_total_volume() const;
  void set_foreigner_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_foreigner_total_volume() const;
  void _internal_set_foreigner_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:stock_api.CybosSubjectTickData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr company_name_;
  PROTOBUF_NAMESPACE_ID::Timestamp* tick_date_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_;
  bool buy_or_sell_;
  ::PROTOBUF_NAMESPACE_ID::uint64 volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 foreigner_total_volume_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class CybosTickData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.CybosTickData) */ {
 public:
  CybosTickData();
  virtual ~CybosTickData();

  CybosTickData(const CybosTickData& from);
  CybosTickData(CybosTickData&& from) noexcept
    : CybosTickData() {
    *this = ::std::move(from);
  }

  inline CybosTickData& operator=(const CybosTickData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CybosTickData& operator=(CybosTickData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CybosTickData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CybosTickData* internal_default_instance() {
    return reinterpret_cast<const CybosTickData*>(
               &_CybosTickData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CybosTickData& a, CybosTickData& b) {
    a.Swap(&b);
  }
  inline void Swap(CybosTickData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CybosTickData* New() const final {
    return CreateMaybeMessage<CybosTickData>(nullptr);
  }

  CybosTickData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CybosTickData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CybosTickData& from);
  void MergeFrom(const CybosTickData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CybosTickData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.CybosTickData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kCompanyNameFieldNumber = 3,
    kTickDateFieldNumber = 1,
    kYesterdayDiffFieldNumber = 4,
    kTimeFieldNumber = 5,
    kStartPriceFieldNumber = 6,
    kHighestPriceFieldNumber = 7,
    kLowestPriceFieldNumber = 8,
    kAskPriceFieldNumber = 9,
    kCumVolumeFieldNumber = 11,
    kBidPriceFieldNumber = 10,
    kCurrentPriceFieldNumber = 13,
    kCumAmountFieldNumber = 12,
    kCumSellVolumeByPriceFieldNumber = 15,
    kCumBuyVolumeByPriceFieldNumber = 16,
    kVolumeFieldNumber = 17,
    kTimeWithSecFieldNumber = 18,
    kMarketTypeExpFieldNumber = 19,
    kBuyOrSellFieldNumber = 14,
    kIsKospiFieldNumber = 24,
    kMarketTypeFieldNumber = 20,
    kOutTimeVolumeFieldNumber = 21,
    kCumSellVolumeFieldNumber = 22,
    kCumBuyVolumeFieldNumber = 23,
  };
  // string code = 2;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // string company_name = 3;
  void clear_company_name();
  const std::string& company_name() const;
  void set_company_name(const std::string& value);
  void set_company_name(std::string&& value);
  void set_company_name(const char* value);
  void set_company_name(const char* value, size_t size);
  std::string* mutable_company_name();
  std::string* release_company_name();
  void set_allocated_company_name(std::string* company_name);
  private:
  const std::string& _internal_company_name() const;
  void _internal_set_company_name(const std::string& value);
  std::string* _internal_mutable_company_name();
  public:

  // .google.protobuf.Timestamp tick_date = 1;
  bool has_tick_date() const;
  private:
  bool _internal_has_tick_date() const;
  public:
  void clear_tick_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& tick_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_tick_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_tick_date();
  void set_allocated_tick_date(PROTOBUF_NAMESPACE_ID::Timestamp* tick_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_tick_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_tick_date();
  public:

  // int32 yesterday_diff = 4;
  void clear_yesterday_diff();
  ::PROTOBUF_NAMESPACE_ID::int32 yesterday_diff() const;
  void set_yesterday_diff(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_yesterday_diff() const;
  void _internal_set_yesterday_diff(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 time = 5;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start_price = 6;
  void clear_start_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_price() const;
  void set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_price() const;
  void _internal_set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 highest_price = 7;
  void clear_highest_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 highest_price() const;
  void set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_highest_price() const;
  void _internal_set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 lowest_price = 8;
  void clear_lowest_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 lowest_price() const;
  void set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lowest_price() const;
  void _internal_set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ask_price = 9;
  void clear_ask_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 ask_price() const;
  void set_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ask_price() const;
  void _internal_set_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 cum_volume = 11;
  void clear_cum_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_volume() const;
  void set_cum_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_volume() const;
  void _internal_set_cum_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 bid_price = 10;
  void clear_bid_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 bid_price() const;
  void set_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bid_price() const;
  void _internal_set_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_price = 13;
  void clear_current_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_price() const;
  void set_current_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_price() const;
  void _internal_set_current_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 cum_amount = 12;
  void clear_cum_amount();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_amount() const;
  void set_cum_amount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_amount() const;
  void _internal_set_cum_amount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 cum_sell_volume_by_price = 15;
  void clear_cum_sell_volume_by_price();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_sell_volume_by_price() const;
  void set_cum_sell_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_sell_volume_by_price() const;
  void _internal_set_cum_sell_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 cum_buy_volume_by_price = 16;
  void clear_cum_buy_volume_by_price();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_buy_volume_by_price() const;
  void set_cum_buy_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_buy_volume_by_price() const;
  void _internal_set_cum_buy_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 volume = 17;
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint32 time_with_sec = 18;
  void clear_time_with_sec();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_with_sec() const;
  void set_time_with_sec(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_with_sec() const;
  void _internal_set_time_with_sec(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 market_type_exp = 19;
  void clear_market_type_exp();
  ::PROTOBUF_NAMESPACE_ID::uint32 market_type_exp() const;
  void set_market_type_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_market_type_exp() const;
  void _internal_set_market_type_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool buy_or_sell = 14;
  void clear_buy_or_sell();
  bool buy_or_sell() const;
  void set_buy_or_sell(bool value);
  private:
  bool _internal_buy_or_sell() const;
  void _internal_set_buy_or_sell(bool value);
  public:

  // bool is_kospi = 24;
  void clear_is_kospi();
  bool is_kospi() const;
  void set_is_kospi(bool value);
  private:
  bool _internal_is_kospi() const;
  void _internal_set_is_kospi(bool value);
  public:

  // uint32 market_type = 20;
  void clear_market_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 market_type() const;
  void set_market_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_market_type() const;
  void _internal_set_market_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 out_time_volume = 21;
  void clear_out_time_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 out_time_volume() const;
  void set_out_time_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_out_time_volume() const;
  void _internal_set_out_time_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 cum_sell_volume = 22;
  void clear_cum_sell_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_sell_volume() const;
  void set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_sell_volume() const;
  void _internal_set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 cum_buy_volume = 23;
  void clear_cum_buy_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_buy_volume() const;
  void set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cum_buy_volume() const;
  void _internal_set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:stock_api.CybosTickData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr company_name_;
  PROTOBUF_NAMESPACE_ID::Timestamp* tick_date_;
  ::PROTOBUF_NAMESPACE_ID::int32 yesterday_diff_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 highest_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lowest_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ask_price_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_volume_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bid_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_price_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_amount_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_sell_volume_by_price_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_buy_volume_by_price_;
  ::PROTOBUF_NAMESPACE_ID::int64 volume_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_with_sec_;
  ::PROTOBUF_NAMESPACE_ID::uint32 market_type_exp_;
  bool buy_or_sell_;
  bool is_kospi_;
  ::PROTOBUF_NAMESPACE_ID::uint32 market_type_;
  ::PROTOBUF_NAMESPACE_ID::uint64 out_time_volume_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_sell_volume_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cum_buy_volume_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// -------------------------------------------------------------------

class CybosBidAskTickData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:stock_api.CybosBidAskTickData) */ {
 public:
  CybosBidAskTickData();
  virtual ~CybosBidAskTickData();

  CybosBidAskTickData(const CybosBidAskTickData& from);
  CybosBidAskTickData(CybosBidAskTickData&& from) noexcept
    : CybosBidAskTickData() {
    *this = ::std::move(from);
  }

  inline CybosBidAskTickData& operator=(const CybosBidAskTickData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CybosBidAskTickData& operator=(CybosBidAskTickData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CybosBidAskTickData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CybosBidAskTickData* internal_default_instance() {
    return reinterpret_cast<const CybosBidAskTickData*>(
               &_CybosBidAskTickData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CybosBidAskTickData& a, CybosBidAskTickData& b) {
    a.Swap(&b);
  }
  inline void Swap(CybosBidAskTickData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CybosBidAskTickData* New() const final {
    return CreateMaybeMessage<CybosBidAskTickData>(nullptr);
  }

  CybosBidAskTickData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CybosBidAskTickData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CybosBidAskTickData& from);
  void MergeFrom(const CybosBidAskTickData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CybosBidAskTickData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "stock_api.CybosBidAskTickData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stock_5fprovider_2eproto);
    return ::descriptor_table_stock_5fprovider_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kTickDateFieldNumber = 1,
    kVolumeFieldNumber = 4,
    kTimeFieldNumber = 3,
    kFirstAskPriceFieldNumber = 5,
    kFirstBidPriceFieldNumber = 6,
    kFirstAskRemainFieldNumber = 7,
    kFirstBidRemainFieldNumber = 8,
    kSecondAskPriceFieldNumber = 9,
    kSecondBidPriceFieldNumber = 10,
    kSecondAskRemainFieldNumber = 11,
    kSecondBidRemainFieldNumber = 12,
    kThirdAskPriceFieldNumber = 13,
    kThirdBidPriceFieldNumber = 14,
    kThirdAskRemainFieldNumber = 15,
    kThirdBidRemainFieldNumber = 16,
    kFourthAskPriceFieldNumber = 17,
    kFourthBidPriceFieldNumber = 18,
    kFourthAskRemainFieldNumber = 19,
    kFourthBidRemainFieldNumber = 20,
    kFifthAskPriceFieldNumber = 21,
    kFifthBidPriceFieldNumber = 22,
    kFifthAskRemainFieldNumber = 23,
    kTotalAskRemainFieldNumber = 25,
    kTotalBidRemainFieldNumber = 26,
    kOutTimeTotalAskRemainFieldNumber = 27,
    kOutTimeTotalBidRemainFieldNumber = 28,
    kFifthBidRemainFieldNumber = 24,
  };
  // string code = 2;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // .google.protobuf.Timestamp tick_date = 1;
  bool has_tick_date() const;
  private:
  bool _internal_has_tick_date() const;
  public:
  void clear_tick_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& tick_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_tick_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_tick_date();
  void set_allocated_tick_date(PROTOBUF_NAMESPACE_ID::Timestamp* tick_date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_tick_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_tick_date();
  public:

  // uint64 volume = 4;
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::uint64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 time = 3;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 first_ask_price = 5;
  void clear_first_ask_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_ask_price() const;
  void set_first_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_ask_price() const;
  void _internal_set_first_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 first_bid_price = 6;
  void clear_first_bid_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_bid_price() const;
  void set_first_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_bid_price() const;
  void _internal_set_first_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 first_ask_remain = 7;
  void clear_first_ask_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_ask_remain() const;
  void set_first_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_ask_remain() const;
  void _internal_set_first_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 first_bid_remain = 8;
  void clear_first_bid_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_bid_remain() const;
  void set_first_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_bid_remain() const;
  void _internal_set_first_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 second_ask_price = 9;
  void clear_second_ask_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 second_ask_price() const;
  void set_second_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_second_ask_price() const;
  void _internal_set_second_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 second_bid_price = 10;
  void clear_second_bid_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 second_bid_price() const;
  void set_second_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_second_bid_price() const;
  void _internal_set_second_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 second_ask_remain = 11;
  void clear_second_ask_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 second_ask_remain() const;
  void set_second_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_second_ask_remain() const;
  void _internal_set_second_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 second_bid_remain = 12;
  void clear_second_bid_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 second_bid_remain() const;
  void set_second_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_second_bid_remain() const;
  void _internal_set_second_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 third_ask_price = 13;
  void clear_third_ask_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 third_ask_price() const;
  void set_third_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_third_ask_price() const;
  void _internal_set_third_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 third_bid_price = 14;
  void clear_third_bid_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 third_bid_price() const;
  void set_third_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_third_bid_price() const;
  void _internal_set_third_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 third_ask_remain = 15;
  void clear_third_ask_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 third_ask_remain() const;
  void set_third_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_third_ask_remain() const;
  void _internal_set_third_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 third_bid_remain = 16;
  void clear_third_bid_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 third_bid_remain() const;
  void set_third_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_third_bid_remain() const;
  void _internal_set_third_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fourth_ask_price = 17;
  void clear_fourth_ask_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_ask_price() const;
  void set_fourth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fourth_ask_price() const;
  void _internal_set_fourth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fourth_bid_price = 18;
  void clear_fourth_bid_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_bid_price() const;
  void set_fourth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fourth_bid_price() const;
  void _internal_set_fourth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fourth_ask_remain = 19;
  void clear_fourth_ask_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_ask_remain() const;
  void set_fourth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fourth_ask_remain() const;
  void _internal_set_fourth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fourth_bid_remain = 20;
  void clear_fourth_bid_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_bid_remain() const;
  void set_fourth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fourth_bid_remain() const;
  void _internal_set_fourth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fifth_ask_price = 21;
  void clear_fifth_ask_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_ask_price() const;
  void set_fifth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fifth_ask_price() const;
  void _internal_set_fifth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fifth_bid_price = 22;
  void clear_fifth_bid_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_bid_price() const;
  void set_fifth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fifth_bid_price() const;
  void _internal_set_fifth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fifth_ask_remain = 23;
  void clear_fifth_ask_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_ask_remain() const;
  void set_fifth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fifth_ask_remain() const;
  void _internal_set_fifth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 total_ask_remain = 25;
  void clear_total_ask_remain();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_ask_remain() const;
  void set_total_ask_remain(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_ask_remain() const;
  void _internal_set_total_ask_remain(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_bid_remain = 26;
  void clear_total_bid_remain();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_bid_remain() const;
  void set_total_bid_remain(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_bid_remain() const;
  void _internal_set_total_bid_remain(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 out_time_total_ask_remain = 27;
  void clear_out_time_total_ask_remain();
  ::PROTOBUF_NAMESPACE_ID::int64 out_time_total_ask_remain() const;
  void set_out_time_total_ask_remain(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_out_time_total_ask_remain() const;
  void _internal_set_out_time_total_ask_remain(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 out_time_total_bid_remain = 28;
  void clear_out_time_total_bid_remain();
  ::PROTOBUF_NAMESPACE_ID::int64 out_time_total_bid_remain() const;
  void set_out_time_total_bid_remain(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_out_time_total_bid_remain() const;
  void _internal_set_out_time_total_bid_remain(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint32 fifth_bid_remain = 24;
  void clear_fifth_bid_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_bid_remain() const;
  void set_fifth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fifth_bid_remain() const;
  void _internal_set_fifth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:stock_api.CybosBidAskTickData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  PROTOBUF_NAMESPACE_ID::Timestamp* tick_date_;
  ::PROTOBUF_NAMESPACE_ID::uint64 volume_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_ask_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_bid_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_ask_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_bid_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 second_ask_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 second_bid_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 second_ask_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 second_bid_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 third_ask_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 third_bid_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 third_ask_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 third_bid_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_ask_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_bid_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_ask_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fourth_bid_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_ask_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_bid_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_ask_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_ask_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_bid_remain_;
  ::PROTOBUF_NAMESPACE_ID::int64 out_time_total_ask_remain_;
  ::PROTOBUF_NAMESPACE_ID::int64 out_time_total_bid_remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fifth_bid_remain_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_stock_5fprovider_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StockCodeQuery

// string code = 1;
inline void StockCodeQuery::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& StockCodeQuery::code() const {
  // @@protoc_insertion_point(field_get:stock_api.StockCodeQuery.code)
  return _internal_code();
}
inline void StockCodeQuery::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:stock_api.StockCodeQuery.code)
}
inline std::string* StockCodeQuery::mutable_code() {
  // @@protoc_insertion_point(field_mutable:stock_api.StockCodeQuery.code)
  return _internal_mutable_code();
}
inline const std::string& StockCodeQuery::_internal_code() const {
  return code_.GetNoArena();
}
inline void StockCodeQuery::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void StockCodeQuery::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.StockCodeQuery.code)
}
inline void StockCodeQuery::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.StockCodeQuery.code)
}
inline void StockCodeQuery::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.StockCodeQuery.code)
}
inline std::string* StockCodeQuery::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StockCodeQuery::release_code() {
  // @@protoc_insertion_point(field_release:stock_api.StockCodeQuery.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StockCodeQuery::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:stock_api.StockCodeQuery.code)
}

// -------------------------------------------------------------------

// CodeList

// repeated string codelist = 1;
inline int CodeList::_internal_codelist_size() const {
  return codelist_.size();
}
inline int CodeList::codelist_size() const {
  return _internal_codelist_size();
}
inline void CodeList::clear_codelist() {
  codelist_.Clear();
}
inline std::string* CodeList::add_codelist() {
  // @@protoc_insertion_point(field_add_mutable:stock_api.CodeList.codelist)
  return _internal_add_codelist();
}
inline const std::string& CodeList::_internal_codelist(int index) const {
  return codelist_.Get(index);
}
inline const std::string& CodeList::codelist(int index) const {
  // @@protoc_insertion_point(field_get:stock_api.CodeList.codelist)
  return _internal_codelist(index);
}
inline std::string* CodeList::mutable_codelist(int index) {
  // @@protoc_insertion_point(field_mutable:stock_api.CodeList.codelist)
  return codelist_.Mutable(index);
}
inline void CodeList::set_codelist(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:stock_api.CodeList.codelist)
  codelist_.Mutable(index)->assign(value);
}
inline void CodeList::set_codelist(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:stock_api.CodeList.codelist)
  codelist_.Mutable(index)->assign(std::move(value));
}
inline void CodeList::set_codelist(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  codelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:stock_api.CodeList.codelist)
}
inline void CodeList::set_codelist(int index, const char* value, size_t size) {
  codelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:stock_api.CodeList.codelist)
}
inline std::string* CodeList::_internal_add_codelist() {
  return codelist_.Add();
}
inline void CodeList::add_codelist(const std::string& value) {
  codelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:stock_api.CodeList.codelist)
}
inline void CodeList::add_codelist(std::string&& value) {
  codelist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:stock_api.CodeList.codelist)
}
inline void CodeList::add_codelist(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  codelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:stock_api.CodeList.codelist)
}
inline void CodeList::add_codelist(const char* value, size_t size) {
  codelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:stock_api.CodeList.codelist)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CodeList::codelist() const {
  // @@protoc_insertion_point(field_list:stock_api.CodeList.codelist)
  return codelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CodeList::mutable_codelist() {
  // @@protoc_insertion_point(field_mutable_list:stock_api.CodeList.codelist)
  return &codelist_;
}

// -------------------------------------------------------------------

// StockQuery

// string code = 1;
inline void StockQuery::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& StockQuery::code() const {
  // @@protoc_insertion_point(field_get:stock_api.StockQuery.code)
  return _internal_code();
}
inline void StockQuery::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:stock_api.StockQuery.code)
}
inline std::string* StockQuery::mutable_code() {
  // @@protoc_insertion_point(field_mutable:stock_api.StockQuery.code)
  return _internal_mutable_code();
}
inline const std::string& StockQuery::_internal_code() const {
  return code_.GetNoArena();
}
inline void StockQuery::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void StockQuery::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.StockQuery.code)
}
inline void StockQuery::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.StockQuery.code)
}
inline void StockQuery::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.StockQuery.code)
}
inline std::string* StockQuery::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StockQuery::release_code() {
  // @@protoc_insertion_point(field_release:stock_api.StockQuery.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StockQuery::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:stock_api.StockQuery.code)
}

// .google.protobuf.Timestamp from_datetime = 2;
inline bool StockQuery::_internal_has_from_datetime() const {
  return this != internal_default_instance() && from_datetime_ != nullptr;
}
inline bool StockQuery::has_from_datetime() const {
  return _internal_has_from_datetime();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& StockQuery::_internal_from_datetime() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = from_datetime_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& StockQuery::from_datetime() const {
  // @@protoc_insertion_point(field_get:stock_api.StockQuery.from_datetime)
  return _internal_from_datetime();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* StockQuery::release_from_datetime() {
  // @@protoc_insertion_point(field_release:stock_api.StockQuery.from_datetime)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = from_datetime_;
  from_datetime_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* StockQuery::_internal_mutable_from_datetime() {
  
  if (from_datetime_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    from_datetime_ = p;
  }
  return from_datetime_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* StockQuery::mutable_from_datetime() {
  // @@protoc_insertion_point(field_mutable:stock_api.StockQuery.from_datetime)
  return _internal_mutable_from_datetime();
}
inline void StockQuery::set_allocated_from_datetime(PROTOBUF_NAMESPACE_ID::Timestamp* from_datetime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(from_datetime_);
  }
  if (from_datetime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(from_datetime)->GetArena();
    if (message_arena != submessage_arena) {
      from_datetime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, from_datetime, submessage_arena);
    }
    
  } else {
    
  }
  from_datetime_ = from_datetime;
  // @@protoc_insertion_point(field_set_allocated:stock_api.StockQuery.from_datetime)
}

// .google.protobuf.Timestamp until_datetime = 3;
inline bool StockQuery::_internal_has_until_datetime() const {
  return this != internal_default_instance() && until_datetime_ != nullptr;
}
inline bool StockQuery::has_until_datetime() const {
  return _internal_has_until_datetime();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& StockQuery::_internal_until_datetime() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = until_datetime_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& StockQuery::until_datetime() const {
  // @@protoc_insertion_point(field_get:stock_api.StockQuery.until_datetime)
  return _internal_until_datetime();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* StockQuery::release_until_datetime() {
  // @@protoc_insertion_point(field_release:stock_api.StockQuery.until_datetime)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = until_datetime_;
  until_datetime_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* StockQuery::_internal_mutable_until_datetime() {
  
  if (until_datetime_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    until_datetime_ = p;
  }
  return until_datetime_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* StockQuery::mutable_until_datetime() {
  // @@protoc_insertion_point(field_mutable:stock_api.StockQuery.until_datetime)
  return _internal_mutable_until_datetime();
}
inline void StockQuery::set_allocated_until_datetime(PROTOBUF_NAMESPACE_ID::Timestamp* until_datetime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(until_datetime_);
  }
  if (until_datetime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(until_datetime)->GetArena();
    if (message_arena != submessage_arena) {
      until_datetime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, until_datetime, submessage_arena);
    }
    
  } else {
    
  }
  until_datetime_ = until_datetime;
  // @@protoc_insertion_point(field_set_allocated:stock_api.StockQuery.until_datetime)
}

// -------------------------------------------------------------------

// PastMinuteQuery

// string code = 1;
inline void PastMinuteQuery::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PastMinuteQuery::code() const {
  // @@protoc_insertion_point(field_get:stock_api.PastMinuteQuery.code)
  return _internal_code();
}
inline void PastMinuteQuery::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:stock_api.PastMinuteQuery.code)
}
inline std::string* PastMinuteQuery::mutable_code() {
  // @@protoc_insertion_point(field_mutable:stock_api.PastMinuteQuery.code)
  return _internal_mutable_code();
}
inline const std::string& PastMinuteQuery::_internal_code() const {
  return code_.GetNoArena();
}
inline void PastMinuteQuery::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PastMinuteQuery::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.PastMinuteQuery.code)
}
inline void PastMinuteQuery::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.PastMinuteQuery.code)
}
inline void PastMinuteQuery::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.PastMinuteQuery.code)
}
inline std::string* PastMinuteQuery::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PastMinuteQuery::release_code() {
  // @@protoc_insertion_point(field_release:stock_api.PastMinuteQuery.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PastMinuteQuery::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:stock_api.PastMinuteQuery.code)
}

// uint32 count_of_days = 2;
inline void PastMinuteQuery::clear_count_of_days() {
  count_of_days_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PastMinuteQuery::_internal_count_of_days() const {
  return count_of_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PastMinuteQuery::count_of_days() const {
  // @@protoc_insertion_point(field_get:stock_api.PastMinuteQuery.count_of_days)
  return _internal_count_of_days();
}
inline void PastMinuteQuery::_internal_set_count_of_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_of_days_ = value;
}
inline void PastMinuteQuery::set_count_of_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count_of_days(value);
  // @@protoc_insertion_point(field_set:stock_api.PastMinuteQuery.count_of_days)
}

// .google.protobuf.Timestamp today = 3;
inline bool PastMinuteQuery::_internal_has_today() const {
  return this != internal_default_instance() && today_ != nullptr;
}
inline bool PastMinuteQuery::has_today() const {
  return _internal_has_today();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& PastMinuteQuery::_internal_today() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = today_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& PastMinuteQuery::today() const {
  // @@protoc_insertion_point(field_get:stock_api.PastMinuteQuery.today)
  return _internal_today();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PastMinuteQuery::release_today() {
  // @@protoc_insertion_point(field_release:stock_api.PastMinuteQuery.today)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = today_;
  today_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PastMinuteQuery::_internal_mutable_today() {
  
  if (today_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    today_ = p;
  }
  return today_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PastMinuteQuery::mutable_today() {
  // @@protoc_insertion_point(field_mutable:stock_api.PastMinuteQuery.today)
  return _internal_mutable_today();
}
inline void PastMinuteQuery::set_allocated_today(PROTOBUF_NAMESPACE_ID::Timestamp* today) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(today_);
  }
  if (today) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(today)->GetArena();
    if (message_arena != submessage_arena) {
      today = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, today, submessage_arena);
    }
    
  } else {
    
  }
  today_ = today;
  // @@protoc_insertion_point(field_set_allocated:stock_api.PastMinuteQuery.today)
}

// -------------------------------------------------------------------

// SimulationArgument

// .google.protobuf.Timestamp from_datetime = 1;
inline bool SimulationArgument::_internal_has_from_datetime() const {
  return this != internal_default_instance() && from_datetime_ != nullptr;
}
inline bool SimulationArgument::has_from_datetime() const {
  return _internal_has_from_datetime();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SimulationArgument::_internal_from_datetime() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = from_datetime_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SimulationArgument::from_datetime() const {
  // @@protoc_insertion_point(field_get:stock_api.SimulationArgument.from_datetime)
  return _internal_from_datetime();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SimulationArgument::release_from_datetime() {
  // @@protoc_insertion_point(field_release:stock_api.SimulationArgument.from_datetime)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = from_datetime_;
  from_datetime_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SimulationArgument::_internal_mutable_from_datetime() {
  
  if (from_datetime_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    from_datetime_ = p;
  }
  return from_datetime_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SimulationArgument::mutable_from_datetime() {
  // @@protoc_insertion_point(field_mutable:stock_api.SimulationArgument.from_datetime)
  return _internal_mutable_from_datetime();
}
inline void SimulationArgument::set_allocated_from_datetime(PROTOBUF_NAMESPACE_ID::Timestamp* from_datetime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(from_datetime_);
  }
  if (from_datetime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(from_datetime)->GetArena();
    if (message_arena != submessage_arena) {
      from_datetime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, from_datetime, submessage_arena);
    }
    
  } else {
    
  }
  from_datetime_ = from_datetime;
  // @@protoc_insertion_point(field_set_allocated:stock_api.SimulationArgument.from_datetime)
}

// -------------------------------------------------------------------

// CybosDayData

// uint32 date = 1;
inline void CybosDayData::clear_date() {
  date_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::_internal_date() const {
  return date_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::date() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.date)
  return _internal_date();
}
inline void CybosDayData::_internal_set_date(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  date_ = value;
}
inline void CybosDayData::set_date(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_date(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.date)
}

// uint32 time = 2;
inline void CybosDayData::clear_time() {
  time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::time() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.time)
  return _internal_time();
}
inline void CybosDayData::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_ = value;
}
inline void CybosDayData::set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.time)
}

// uint32 start_price = 3;
inline void CybosDayData::clear_start_price() {
  start_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::_internal_start_price() const {
  return start_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::start_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.start_price)
  return _internal_start_price();
}
inline void CybosDayData::_internal_set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_price_ = value;
}
inline void CybosDayData::set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.start_price)
}

// uint32 highest_price = 4;
inline void CybosDayData::clear_highest_price() {
  highest_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::_internal_highest_price() const {
  return highest_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::highest_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.highest_price)
  return _internal_highest_price();
}
inline void CybosDayData::_internal_set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  highest_price_ = value;
}
inline void CybosDayData::set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_highest_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.highest_price)
}

// uint32 lowest_price = 5;
inline void CybosDayData::clear_lowest_price() {
  lowest_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::_internal_lowest_price() const {
  return lowest_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::lowest_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.lowest_price)
  return _internal_lowest_price();
}
inline void CybosDayData::_internal_set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lowest_price_ = value;
}
inline void CybosDayData::set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lowest_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.lowest_price)
}

// uint32 close_price = 6;
inline void CybosDayData::clear_close_price() {
  close_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::_internal_close_price() const {
  return close_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosDayData::close_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.close_price)
  return _internal_close_price();
}
inline void CybosDayData::_internal_set_close_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  close_price_ = value;
}
inline void CybosDayData::set_close_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_close_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.close_price)
}

// uint64 volume = 7;
inline void CybosDayData::clear_volume() {
  volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.volume)
  return _internal_volume();
}
inline void CybosDayData::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  volume_ = value;
}
inline void CybosDayData::set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.volume)
}

// uint64 amount = 8;
inline void CybosDayData::clear_amount() {
  amount_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::_internal_amount() const {
  return amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::amount() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.amount)
  return _internal_amount();
}
inline void CybosDayData::_internal_set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  amount_ = value;
}
inline void CybosDayData::set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.amount)
}

// uint64 cum_sell_volume = 9;
inline void CybosDayData::clear_cum_sell_volume() {
  cum_sell_volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::_internal_cum_sell_volume() const {
  return cum_sell_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::cum_sell_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.cum_sell_volume)
  return _internal_cum_sell_volume();
}
inline void CybosDayData::_internal_set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_sell_volume_ = value;
}
inline void CybosDayData::set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_sell_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.cum_sell_volume)
}

// uint64 cum_buy_volume = 10;
inline void CybosDayData::clear_cum_buy_volume() {
  cum_buy_volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::_internal_cum_buy_volume() const {
  return cum_buy_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosDayData::cum_buy_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.cum_buy_volume)
  return _internal_cum_buy_volume();
}
inline void CybosDayData::_internal_set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_buy_volume_ = value;
}
inline void CybosDayData::set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_buy_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.cum_buy_volume)
}

// int64 foreigner_hold_volume = 11;
inline void CybosDayData::clear_foreigner_hold_volume() {
  foreigner_hold_volume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosDayData::_internal_foreigner_hold_volume() const {
  return foreigner_hold_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosDayData::foreigner_hold_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.foreigner_hold_volume)
  return _internal_foreigner_hold_volume();
}
inline void CybosDayData::_internal_set_foreigner_hold_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  foreigner_hold_volume_ = value;
}
inline void CybosDayData::set_foreigner_hold_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_foreigner_hold_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.foreigner_hold_volume)
}

// float foreigner_hold_rate = 12;
inline void CybosDayData::clear_foreigner_hold_rate() {
  foreigner_hold_rate_ = 0;
}
inline float CybosDayData::_internal_foreigner_hold_rate() const {
  return foreigner_hold_rate_;
}
inline float CybosDayData::foreigner_hold_rate() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.foreigner_hold_rate)
  return _internal_foreigner_hold_rate();
}
inline void CybosDayData::_internal_set_foreigner_hold_rate(float value) {
  
  foreigner_hold_rate_ = value;
}
inline void CybosDayData::set_foreigner_hold_rate(float value) {
  _internal_set_foreigner_hold_rate(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.foreigner_hold_rate)
}

// int64 institution_buy_volume = 13;
inline void CybosDayData::clear_institution_buy_volume() {
  institution_buy_volume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosDayData::_internal_institution_buy_volume() const {
  return institution_buy_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosDayData::institution_buy_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.institution_buy_volume)
  return _internal_institution_buy_volume();
}
inline void CybosDayData::_internal_set_institution_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  institution_buy_volume_ = value;
}
inline void CybosDayData::set_institution_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_institution_buy_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.institution_buy_volume)
}

// int64 institution_cum_buy_volume = 14;
inline void CybosDayData::clear_institution_cum_buy_volume() {
  institution_cum_buy_volume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosDayData::_internal_institution_cum_buy_volume() const {
  return institution_cum_buy_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosDayData::institution_cum_buy_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayData.institution_cum_buy_volume)
  return _internal_institution_cum_buy_volume();
}
inline void CybosDayData::_internal_set_institution_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  institution_cum_buy_volume_ = value;
}
inline void CybosDayData::set_institution_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_institution_cum_buy_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosDayData.institution_cum_buy_volume)
}

// -------------------------------------------------------------------

// CybosDayDatas

// repeated .stock_api.CybosDayData day_data = 1;
inline int CybosDayDatas::_internal_day_data_size() const {
  return day_data_.size();
}
inline int CybosDayDatas::day_data_size() const {
  return _internal_day_data_size();
}
inline void CybosDayDatas::clear_day_data() {
  day_data_.Clear();
}
inline ::stock_api::CybosDayData* CybosDayDatas::mutable_day_data(int index) {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosDayDatas.day_data)
  return day_data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::stock_api::CybosDayData >*
CybosDayDatas::mutable_day_data() {
  // @@protoc_insertion_point(field_mutable_list:stock_api.CybosDayDatas.day_data)
  return &day_data_;
}
inline const ::stock_api::CybosDayData& CybosDayDatas::_internal_day_data(int index) const {
  return day_data_.Get(index);
}
inline const ::stock_api::CybosDayData& CybosDayDatas::day_data(int index) const {
  // @@protoc_insertion_point(field_get:stock_api.CybosDayDatas.day_data)
  return _internal_day_data(index);
}
inline ::stock_api::CybosDayData* CybosDayDatas::_internal_add_day_data() {
  return day_data_.Add();
}
inline ::stock_api::CybosDayData* CybosDayDatas::add_day_data() {
  // @@protoc_insertion_point(field_add:stock_api.CybosDayDatas.day_data)
  return _internal_add_day_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::stock_api::CybosDayData >&
CybosDayDatas::day_data() const {
  // @@protoc_insertion_point(field_list:stock_api.CybosDayDatas.day_data)
  return day_data_;
}

// -------------------------------------------------------------------

// CybosSubjectTickData

// .google.protobuf.Timestamp tick_date = 1;
inline bool CybosSubjectTickData::_internal_has_tick_date() const {
  return this != internal_default_instance() && tick_date_ != nullptr;
}
inline bool CybosSubjectTickData::has_tick_date() const {
  return _internal_has_tick_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CybosSubjectTickData::_internal_tick_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = tick_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CybosSubjectTickData::tick_date() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.tick_date)
  return _internal_tick_date();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosSubjectTickData::release_tick_date() {
  // @@protoc_insertion_point(field_release:stock_api.CybosSubjectTickData.tick_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = tick_date_;
  tick_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosSubjectTickData::_internal_mutable_tick_date() {
  
  if (tick_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    tick_date_ = p;
  }
  return tick_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosSubjectTickData::mutable_tick_date() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosSubjectTickData.tick_date)
  return _internal_mutable_tick_date();
}
inline void CybosSubjectTickData::set_allocated_tick_date(PROTOBUF_NAMESPACE_ID::Timestamp* tick_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tick_date_);
  }
  if (tick_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tick_date)->GetArena();
    if (message_arena != submessage_arena) {
      tick_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tick_date, submessage_arena);
    }
    
  } else {
    
  }
  tick_date_ = tick_date;
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosSubjectTickData.tick_date)
}

// uint32 time = 2;
inline void CybosSubjectTickData::clear_time() {
  time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosSubjectTickData::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosSubjectTickData::time() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.time)
  return _internal_time();
}
inline void CybosSubjectTickData::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_ = value;
}
inline void CybosSubjectTickData::set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.time)
}

// string name = 3;
inline void CybosSubjectTickData::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CybosSubjectTickData::name() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.name)
  return _internal_name();
}
inline void CybosSubjectTickData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.name)
}
inline std::string* CybosSubjectTickData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosSubjectTickData.name)
  return _internal_mutable_name();
}
inline const std::string& CybosSubjectTickData::_internal_name() const {
  return name_.GetNoArena();
}
inline void CybosSubjectTickData::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CybosSubjectTickData::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.CybosSubjectTickData.name)
}
inline void CybosSubjectTickData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.CybosSubjectTickData.name)
}
inline void CybosSubjectTickData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.CybosSubjectTickData.name)
}
inline std::string* CybosSubjectTickData::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CybosSubjectTickData::release_name() {
  // @@protoc_insertion_point(field_release:stock_api.CybosSubjectTickData.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CybosSubjectTickData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosSubjectTickData.name)
}

// string code = 4;
inline void CybosSubjectTickData::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CybosSubjectTickData::code() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.code)
  return _internal_code();
}
inline void CybosSubjectTickData::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.code)
}
inline std::string* CybosSubjectTickData::mutable_code() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosSubjectTickData.code)
  return _internal_mutable_code();
}
inline const std::string& CybosSubjectTickData::_internal_code() const {
  return code_.GetNoArena();
}
inline void CybosSubjectTickData::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CybosSubjectTickData::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.CybosSubjectTickData.code)
}
inline void CybosSubjectTickData::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.CybosSubjectTickData.code)
}
inline void CybosSubjectTickData::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.CybosSubjectTickData.code)
}
inline std::string* CybosSubjectTickData::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CybosSubjectTickData::release_code() {
  // @@protoc_insertion_point(field_release:stock_api.CybosSubjectTickData.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CybosSubjectTickData::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosSubjectTickData.code)
}

// string company_name = 5;
inline void CybosSubjectTickData::clear_company_name() {
  company_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CybosSubjectTickData::company_name() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.company_name)
  return _internal_company_name();
}
inline void CybosSubjectTickData::set_company_name(const std::string& value) {
  _internal_set_company_name(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.company_name)
}
inline std::string* CybosSubjectTickData::mutable_company_name() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosSubjectTickData.company_name)
  return _internal_mutable_company_name();
}
inline const std::string& CybosSubjectTickData::_internal_company_name() const {
  return company_name_.GetNoArena();
}
inline void CybosSubjectTickData::_internal_set_company_name(const std::string& value) {
  
  company_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CybosSubjectTickData::set_company_name(std::string&& value) {
  
  company_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.CybosSubjectTickData.company_name)
}
inline void CybosSubjectTickData::set_company_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  company_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.CybosSubjectTickData.company_name)
}
inline void CybosSubjectTickData::set_company_name(const char* value, size_t size) {
  
  company_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.CybosSubjectTickData.company_name)
}
inline std::string* CybosSubjectTickData::_internal_mutable_company_name() {
  
  return company_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CybosSubjectTickData::release_company_name() {
  // @@protoc_insertion_point(field_release:stock_api.CybosSubjectTickData.company_name)
  
  return company_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CybosSubjectTickData::set_allocated_company_name(std::string* company_name) {
  if (company_name != nullptr) {
    
  } else {
    
  }
  company_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), company_name);
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosSubjectTickData.company_name)
}

// bool buy_or_sell = 6;
inline void CybosSubjectTickData::clear_buy_or_sell() {
  buy_or_sell_ = false;
}
inline bool CybosSubjectTickData::_internal_buy_or_sell() const {
  return buy_or_sell_;
}
inline bool CybosSubjectTickData::buy_or_sell() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.buy_or_sell)
  return _internal_buy_or_sell();
}
inline void CybosSubjectTickData::_internal_set_buy_or_sell(bool value) {
  
  buy_or_sell_ = value;
}
inline void CybosSubjectTickData::set_buy_or_sell(bool value) {
  _internal_set_buy_or_sell(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.buy_or_sell)
}

// uint64 volume = 7;
inline void CybosSubjectTickData::clear_volume() {
  volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosSubjectTickData::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosSubjectTickData::volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.volume)
  return _internal_volume();
}
inline void CybosSubjectTickData::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  volume_ = value;
}
inline void CybosSubjectTickData::set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.volume)
}

// int64 total_volume = 8;
inline void CybosSubjectTickData::clear_total_volume() {
  total_volume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosSubjectTickData::_internal_total_volume() const {
  return total_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosSubjectTickData::total_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.total_volume)
  return _internal_total_volume();
}
inline void CybosSubjectTickData::_internal_set_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_volume_ = value;
}
inline void CybosSubjectTickData::set_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.total_volume)
}

// int64 foreigner_total_volume = 9;
inline void CybosSubjectTickData::clear_foreigner_total_volume() {
  foreigner_total_volume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosSubjectTickData::_internal_foreigner_total_volume() const {
  return foreigner_total_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosSubjectTickData::foreigner_total_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosSubjectTickData.foreigner_total_volume)
  return _internal_foreigner_total_volume();
}
inline void CybosSubjectTickData::_internal_set_foreigner_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  foreigner_total_volume_ = value;
}
inline void CybosSubjectTickData::set_foreigner_total_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_foreigner_total_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosSubjectTickData.foreigner_total_volume)
}

// -------------------------------------------------------------------

// CybosTickData

// .google.protobuf.Timestamp tick_date = 1;
inline bool CybosTickData::_internal_has_tick_date() const {
  return this != internal_default_instance() && tick_date_ != nullptr;
}
inline bool CybosTickData::has_tick_date() const {
  return _internal_has_tick_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CybosTickData::_internal_tick_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = tick_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CybosTickData::tick_date() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.tick_date)
  return _internal_tick_date();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosTickData::release_tick_date() {
  // @@protoc_insertion_point(field_release:stock_api.CybosTickData.tick_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = tick_date_;
  tick_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosTickData::_internal_mutable_tick_date() {
  
  if (tick_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    tick_date_ = p;
  }
  return tick_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosTickData::mutable_tick_date() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosTickData.tick_date)
  return _internal_mutable_tick_date();
}
inline void CybosTickData::set_allocated_tick_date(PROTOBUF_NAMESPACE_ID::Timestamp* tick_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tick_date_);
  }
  if (tick_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tick_date)->GetArena();
    if (message_arena != submessage_arena) {
      tick_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tick_date, submessage_arena);
    }
    
  } else {
    
  }
  tick_date_ = tick_date;
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosTickData.tick_date)
}

// string code = 2;
inline void CybosTickData::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CybosTickData::code() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.code)
  return _internal_code();
}
inline void CybosTickData::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.code)
}
inline std::string* CybosTickData::mutable_code() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosTickData.code)
  return _internal_mutable_code();
}
inline const std::string& CybosTickData::_internal_code() const {
  return code_.GetNoArena();
}
inline void CybosTickData::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CybosTickData::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.CybosTickData.code)
}
inline void CybosTickData::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.CybosTickData.code)
}
inline void CybosTickData::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.CybosTickData.code)
}
inline std::string* CybosTickData::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CybosTickData::release_code() {
  // @@protoc_insertion_point(field_release:stock_api.CybosTickData.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CybosTickData::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosTickData.code)
}

// string company_name = 3;
inline void CybosTickData::clear_company_name() {
  company_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CybosTickData::company_name() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.company_name)
  return _internal_company_name();
}
inline void CybosTickData::set_company_name(const std::string& value) {
  _internal_set_company_name(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.company_name)
}
inline std::string* CybosTickData::mutable_company_name() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosTickData.company_name)
  return _internal_mutable_company_name();
}
inline const std::string& CybosTickData::_internal_company_name() const {
  return company_name_.GetNoArena();
}
inline void CybosTickData::_internal_set_company_name(const std::string& value) {
  
  company_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CybosTickData::set_company_name(std::string&& value) {
  
  company_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.CybosTickData.company_name)
}
inline void CybosTickData::set_company_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  company_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.CybosTickData.company_name)
}
inline void CybosTickData::set_company_name(const char* value, size_t size) {
  
  company_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.CybosTickData.company_name)
}
inline std::string* CybosTickData::_internal_mutable_company_name() {
  
  return company_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CybosTickData::release_company_name() {
  // @@protoc_insertion_point(field_release:stock_api.CybosTickData.company_name)
  
  return company_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CybosTickData::set_allocated_company_name(std::string* company_name) {
  if (company_name != nullptr) {
    
  } else {
    
  }
  company_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), company_name);
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosTickData.company_name)
}

// int32 yesterday_diff = 4;
inline void CybosTickData::clear_yesterday_diff() {
  yesterday_diff_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CybosTickData::_internal_yesterday_diff() const {
  return yesterday_diff_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CybosTickData::yesterday_diff() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.yesterday_diff)
  return _internal_yesterday_diff();
}
inline void CybosTickData::_internal_set_yesterday_diff(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  yesterday_diff_ = value;
}
inline void CybosTickData::set_yesterday_diff(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_yesterday_diff(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.yesterday_diff)
}

// uint32 time = 5;
inline void CybosTickData::clear_time() {
  time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::time() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.time)
  return _internal_time();
}
inline void CybosTickData::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_ = value;
}
inline void CybosTickData::set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.time)
}

// uint32 start_price = 6;
inline void CybosTickData::clear_start_price() {
  start_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_start_price() const {
  return start_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::start_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.start_price)
  return _internal_start_price();
}
inline void CybosTickData::_internal_set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_price_ = value;
}
inline void CybosTickData::set_start_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.start_price)
}

// uint32 highest_price = 7;
inline void CybosTickData::clear_highest_price() {
  highest_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_highest_price() const {
  return highest_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::highest_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.highest_price)
  return _internal_highest_price();
}
inline void CybosTickData::_internal_set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  highest_price_ = value;
}
inline void CybosTickData::set_highest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_highest_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.highest_price)
}

// uint32 lowest_price = 8;
inline void CybosTickData::clear_lowest_price() {
  lowest_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_lowest_price() const {
  return lowest_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::lowest_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.lowest_price)
  return _internal_lowest_price();
}
inline void CybosTickData::_internal_set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lowest_price_ = value;
}
inline void CybosTickData::set_lowest_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lowest_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.lowest_price)
}

// uint32 ask_price = 9;
inline void CybosTickData::clear_ask_price() {
  ask_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_ask_price() const {
  return ask_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::ask_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.ask_price)
  return _internal_ask_price();
}
inline void CybosTickData::_internal_set_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ask_price_ = value;
}
inline void CybosTickData::set_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ask_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.ask_price)
}

// uint32 bid_price = 10;
inline void CybosTickData::clear_bid_price() {
  bid_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_bid_price() const {
  return bid_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::bid_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.bid_price)
  return _internal_bid_price();
}
inline void CybosTickData::_internal_set_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bid_price_ = value;
}
inline void CybosTickData::set_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bid_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.bid_price)
}

// uint64 cum_volume = 11;
inline void CybosTickData::clear_cum_volume() {
  cum_volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::_internal_cum_volume() const {
  return cum_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::cum_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.cum_volume)
  return _internal_cum_volume();
}
inline void CybosTickData::_internal_set_cum_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_volume_ = value;
}
inline void CybosTickData::set_cum_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.cum_volume)
}

// uint64 cum_amount = 12;
inline void CybosTickData::clear_cum_amount() {
  cum_amount_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::_internal_cum_amount() const {
  return cum_amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::cum_amount() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.cum_amount)
  return _internal_cum_amount();
}
inline void CybosTickData::_internal_set_cum_amount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_amount_ = value;
}
inline void CybosTickData::set_cum_amount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_amount(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.cum_amount)
}

// uint32 current_price = 13;
inline void CybosTickData::clear_current_price() {
  current_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_current_price() const {
  return current_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::current_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.current_price)
  return _internal_current_price();
}
inline void CybosTickData::_internal_set_current_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_price_ = value;
}
inline void CybosTickData::set_current_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.current_price)
}

// bool buy_or_sell = 14;
inline void CybosTickData::clear_buy_or_sell() {
  buy_or_sell_ = false;
}
inline bool CybosTickData::_internal_buy_or_sell() const {
  return buy_or_sell_;
}
inline bool CybosTickData::buy_or_sell() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.buy_or_sell)
  return _internal_buy_or_sell();
}
inline void CybosTickData::_internal_set_buy_or_sell(bool value) {
  
  buy_or_sell_ = value;
}
inline void CybosTickData::set_buy_or_sell(bool value) {
  _internal_set_buy_or_sell(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.buy_or_sell)
}

// uint64 cum_sell_volume_by_price = 15;
inline void CybosTickData::clear_cum_sell_volume_by_price() {
  cum_sell_volume_by_price_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::_internal_cum_sell_volume_by_price() const {
  return cum_sell_volume_by_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::cum_sell_volume_by_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.cum_sell_volume_by_price)
  return _internal_cum_sell_volume_by_price();
}
inline void CybosTickData::_internal_set_cum_sell_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_sell_volume_by_price_ = value;
}
inline void CybosTickData::set_cum_sell_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_sell_volume_by_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.cum_sell_volume_by_price)
}

// uint64 cum_buy_volume_by_price = 16;
inline void CybosTickData::clear_cum_buy_volume_by_price() {
  cum_buy_volume_by_price_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::_internal_cum_buy_volume_by_price() const {
  return cum_buy_volume_by_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::cum_buy_volume_by_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.cum_buy_volume_by_price)
  return _internal_cum_buy_volume_by_price();
}
inline void CybosTickData::_internal_set_cum_buy_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_buy_volume_by_price_ = value;
}
inline void CybosTickData::set_cum_buy_volume_by_price(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_buy_volume_by_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.cum_buy_volume_by_price)
}

// int64 volume = 17;
inline void CybosTickData::clear_volume() {
  volume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosTickData::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosTickData::volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.volume)
  return _internal_volume();
}
inline void CybosTickData::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  volume_ = value;
}
inline void CybosTickData::set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.volume)
}

// uint32 time_with_sec = 18;
inline void CybosTickData::clear_time_with_sec() {
  time_with_sec_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_time_with_sec() const {
  return time_with_sec_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::time_with_sec() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.time_with_sec)
  return _internal_time_with_sec();
}
inline void CybosTickData::_internal_set_time_with_sec(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_with_sec_ = value;
}
inline void CybosTickData::set_time_with_sec(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_with_sec(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.time_with_sec)
}

// uint32 market_type_exp = 19;
inline void CybosTickData::clear_market_type_exp() {
  market_type_exp_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_market_type_exp() const {
  return market_type_exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::market_type_exp() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.market_type_exp)
  return _internal_market_type_exp();
}
inline void CybosTickData::_internal_set_market_type_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  market_type_exp_ = value;
}
inline void CybosTickData::set_market_type_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_market_type_exp(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.market_type_exp)
}

// uint32 market_type = 20;
inline void CybosTickData::clear_market_type() {
  market_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::_internal_market_type() const {
  return market_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosTickData::market_type() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.market_type)
  return _internal_market_type();
}
inline void CybosTickData::_internal_set_market_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  market_type_ = value;
}
inline void CybosTickData::set_market_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_market_type(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.market_type)
}

// uint64 out_time_volume = 21;
inline void CybosTickData::clear_out_time_volume() {
  out_time_volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::_internal_out_time_volume() const {
  return out_time_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::out_time_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.out_time_volume)
  return _internal_out_time_volume();
}
inline void CybosTickData::_internal_set_out_time_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  out_time_volume_ = value;
}
inline void CybosTickData::set_out_time_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_out_time_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.out_time_volume)
}

// uint64 cum_sell_volume = 22;
inline void CybosTickData::clear_cum_sell_volume() {
  cum_sell_volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::_internal_cum_sell_volume() const {
  return cum_sell_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::cum_sell_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.cum_sell_volume)
  return _internal_cum_sell_volume();
}
inline void CybosTickData::_internal_set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_sell_volume_ = value;
}
inline void CybosTickData::set_cum_sell_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_sell_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.cum_sell_volume)
}

// uint64 cum_buy_volume = 23;
inline void CybosTickData::clear_cum_buy_volume() {
  cum_buy_volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::_internal_cum_buy_volume() const {
  return cum_buy_volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosTickData::cum_buy_volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.cum_buy_volume)
  return _internal_cum_buy_volume();
}
inline void CybosTickData::_internal_set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cum_buy_volume_ = value;
}
inline void CybosTickData::set_cum_buy_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cum_buy_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.cum_buy_volume)
}

// bool is_kospi = 24;
inline void CybosTickData::clear_is_kospi() {
  is_kospi_ = false;
}
inline bool CybosTickData::_internal_is_kospi() const {
  return is_kospi_;
}
inline bool CybosTickData::is_kospi() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosTickData.is_kospi)
  return _internal_is_kospi();
}
inline void CybosTickData::_internal_set_is_kospi(bool value) {
  
  is_kospi_ = value;
}
inline void CybosTickData::set_is_kospi(bool value) {
  _internal_set_is_kospi(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosTickData.is_kospi)
}

// -------------------------------------------------------------------

// CybosBidAskTickData

// .google.protobuf.Timestamp tick_date = 1;
inline bool CybosBidAskTickData::_internal_has_tick_date() const {
  return this != internal_default_instance() && tick_date_ != nullptr;
}
inline bool CybosBidAskTickData::has_tick_date() const {
  return _internal_has_tick_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CybosBidAskTickData::_internal_tick_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = tick_date_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CybosBidAskTickData::tick_date() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.tick_date)
  return _internal_tick_date();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosBidAskTickData::release_tick_date() {
  // @@protoc_insertion_point(field_release:stock_api.CybosBidAskTickData.tick_date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = tick_date_;
  tick_date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosBidAskTickData::_internal_mutable_tick_date() {
  
  if (tick_date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    tick_date_ = p;
  }
  return tick_date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CybosBidAskTickData::mutable_tick_date() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosBidAskTickData.tick_date)
  return _internal_mutable_tick_date();
}
inline void CybosBidAskTickData::set_allocated_tick_date(PROTOBUF_NAMESPACE_ID::Timestamp* tick_date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tick_date_);
  }
  if (tick_date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tick_date)->GetArena();
    if (message_arena != submessage_arena) {
      tick_date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tick_date, submessage_arena);
    }
    
  } else {
    
  }
  tick_date_ = tick_date;
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosBidAskTickData.tick_date)
}

// string code = 2;
inline void CybosBidAskTickData::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CybosBidAskTickData::code() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.code)
  return _internal_code();
}
inline void CybosBidAskTickData::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.code)
}
inline std::string* CybosBidAskTickData::mutable_code() {
  // @@protoc_insertion_point(field_mutable:stock_api.CybosBidAskTickData.code)
  return _internal_mutable_code();
}
inline const std::string& CybosBidAskTickData::_internal_code() const {
  return code_.GetNoArena();
}
inline void CybosBidAskTickData::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CybosBidAskTickData::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stock_api.CybosBidAskTickData.code)
}
inline void CybosBidAskTickData::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stock_api.CybosBidAskTickData.code)
}
inline void CybosBidAskTickData::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stock_api.CybosBidAskTickData.code)
}
inline std::string* CybosBidAskTickData::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CybosBidAskTickData::release_code() {
  // @@protoc_insertion_point(field_release:stock_api.CybosBidAskTickData.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CybosBidAskTickData::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:stock_api.CybosBidAskTickData.code)
}

// uint32 time = 3;
inline void CybosBidAskTickData::clear_time() {
  time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::time() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.time)
  return _internal_time();
}
inline void CybosBidAskTickData::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_ = value;
}
inline void CybosBidAskTickData::set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.time)
}

// uint64 volume = 4;
inline void CybosBidAskTickData::clear_volume() {
  volume_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosBidAskTickData::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosBidAskTickData::volume() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.volume)
  return _internal_volume();
}
inline void CybosBidAskTickData::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  volume_ = value;
}
inline void CybosBidAskTickData::set_volume(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.volume)
}

// uint32 first_ask_price = 5;
inline void CybosBidAskTickData::clear_first_ask_price() {
  first_ask_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_first_ask_price() const {
  return first_ask_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::first_ask_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.first_ask_price)
  return _internal_first_ask_price();
}
inline void CybosBidAskTickData::_internal_set_first_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_ask_price_ = value;
}
inline void CybosBidAskTickData::set_first_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_ask_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.first_ask_price)
}

// uint32 first_bid_price = 6;
inline void CybosBidAskTickData::clear_first_bid_price() {
  first_bid_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_first_bid_price() const {
  return first_bid_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::first_bid_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.first_bid_price)
  return _internal_first_bid_price();
}
inline void CybosBidAskTickData::_internal_set_first_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_bid_price_ = value;
}
inline void CybosBidAskTickData::set_first_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_bid_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.first_bid_price)
}

// uint32 first_ask_remain = 7;
inline void CybosBidAskTickData::clear_first_ask_remain() {
  first_ask_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_first_ask_remain() const {
  return first_ask_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::first_ask_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.first_ask_remain)
  return _internal_first_ask_remain();
}
inline void CybosBidAskTickData::_internal_set_first_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_ask_remain_ = value;
}
inline void CybosBidAskTickData::set_first_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_ask_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.first_ask_remain)
}

// uint32 first_bid_remain = 8;
inline void CybosBidAskTickData::clear_first_bid_remain() {
  first_bid_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_first_bid_remain() const {
  return first_bid_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::first_bid_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.first_bid_remain)
  return _internal_first_bid_remain();
}
inline void CybosBidAskTickData::_internal_set_first_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_bid_remain_ = value;
}
inline void CybosBidAskTickData::set_first_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_bid_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.first_bid_remain)
}

// uint32 second_ask_price = 9;
inline void CybosBidAskTickData::clear_second_ask_price() {
  second_ask_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_second_ask_price() const {
  return second_ask_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::second_ask_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.second_ask_price)
  return _internal_second_ask_price();
}
inline void CybosBidAskTickData::_internal_set_second_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  second_ask_price_ = value;
}
inline void CybosBidAskTickData::set_second_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_second_ask_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.second_ask_price)
}

// uint32 second_bid_price = 10;
inline void CybosBidAskTickData::clear_second_bid_price() {
  second_bid_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_second_bid_price() const {
  return second_bid_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::second_bid_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.second_bid_price)
  return _internal_second_bid_price();
}
inline void CybosBidAskTickData::_internal_set_second_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  second_bid_price_ = value;
}
inline void CybosBidAskTickData::set_second_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_second_bid_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.second_bid_price)
}

// uint32 second_ask_remain = 11;
inline void CybosBidAskTickData::clear_second_ask_remain() {
  second_ask_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_second_ask_remain() const {
  return second_ask_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::second_ask_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.second_ask_remain)
  return _internal_second_ask_remain();
}
inline void CybosBidAskTickData::_internal_set_second_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  second_ask_remain_ = value;
}
inline void CybosBidAskTickData::set_second_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_second_ask_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.second_ask_remain)
}

// uint32 second_bid_remain = 12;
inline void CybosBidAskTickData::clear_second_bid_remain() {
  second_bid_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_second_bid_remain() const {
  return second_bid_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::second_bid_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.second_bid_remain)
  return _internal_second_bid_remain();
}
inline void CybosBidAskTickData::_internal_set_second_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  second_bid_remain_ = value;
}
inline void CybosBidAskTickData::set_second_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_second_bid_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.second_bid_remain)
}

// uint32 third_ask_price = 13;
inline void CybosBidAskTickData::clear_third_ask_price() {
  third_ask_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_third_ask_price() const {
  return third_ask_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::third_ask_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.third_ask_price)
  return _internal_third_ask_price();
}
inline void CybosBidAskTickData::_internal_set_third_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  third_ask_price_ = value;
}
inline void CybosBidAskTickData::set_third_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_third_ask_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.third_ask_price)
}

// uint32 third_bid_price = 14;
inline void CybosBidAskTickData::clear_third_bid_price() {
  third_bid_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_third_bid_price() const {
  return third_bid_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::third_bid_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.third_bid_price)
  return _internal_third_bid_price();
}
inline void CybosBidAskTickData::_internal_set_third_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  third_bid_price_ = value;
}
inline void CybosBidAskTickData::set_third_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_third_bid_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.third_bid_price)
}

// uint32 third_ask_remain = 15;
inline void CybosBidAskTickData::clear_third_ask_remain() {
  third_ask_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_third_ask_remain() const {
  return third_ask_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::third_ask_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.third_ask_remain)
  return _internal_third_ask_remain();
}
inline void CybosBidAskTickData::_internal_set_third_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  third_ask_remain_ = value;
}
inline void CybosBidAskTickData::set_third_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_third_ask_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.third_ask_remain)
}

// uint32 third_bid_remain = 16;
inline void CybosBidAskTickData::clear_third_bid_remain() {
  third_bid_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_third_bid_remain() const {
  return third_bid_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::third_bid_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.third_bid_remain)
  return _internal_third_bid_remain();
}
inline void CybosBidAskTickData::_internal_set_third_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  third_bid_remain_ = value;
}
inline void CybosBidAskTickData::set_third_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_third_bid_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.third_bid_remain)
}

// uint32 fourth_ask_price = 17;
inline void CybosBidAskTickData::clear_fourth_ask_price() {
  fourth_ask_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fourth_ask_price() const {
  return fourth_ask_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fourth_ask_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fourth_ask_price)
  return _internal_fourth_ask_price();
}
inline void CybosBidAskTickData::_internal_set_fourth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fourth_ask_price_ = value;
}
inline void CybosBidAskTickData::set_fourth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fourth_ask_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fourth_ask_price)
}

// uint32 fourth_bid_price = 18;
inline void CybosBidAskTickData::clear_fourth_bid_price() {
  fourth_bid_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fourth_bid_price() const {
  return fourth_bid_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fourth_bid_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fourth_bid_price)
  return _internal_fourth_bid_price();
}
inline void CybosBidAskTickData::_internal_set_fourth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fourth_bid_price_ = value;
}
inline void CybosBidAskTickData::set_fourth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fourth_bid_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fourth_bid_price)
}

// uint32 fourth_ask_remain = 19;
inline void CybosBidAskTickData::clear_fourth_ask_remain() {
  fourth_ask_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fourth_ask_remain() const {
  return fourth_ask_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fourth_ask_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fourth_ask_remain)
  return _internal_fourth_ask_remain();
}
inline void CybosBidAskTickData::_internal_set_fourth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fourth_ask_remain_ = value;
}
inline void CybosBidAskTickData::set_fourth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fourth_ask_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fourth_ask_remain)
}

// uint32 fourth_bid_remain = 20;
inline void CybosBidAskTickData::clear_fourth_bid_remain() {
  fourth_bid_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fourth_bid_remain() const {
  return fourth_bid_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fourth_bid_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fourth_bid_remain)
  return _internal_fourth_bid_remain();
}
inline void CybosBidAskTickData::_internal_set_fourth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fourth_bid_remain_ = value;
}
inline void CybosBidAskTickData::set_fourth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fourth_bid_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fourth_bid_remain)
}

// uint32 fifth_ask_price = 21;
inline void CybosBidAskTickData::clear_fifth_ask_price() {
  fifth_ask_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fifth_ask_price() const {
  return fifth_ask_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fifth_ask_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fifth_ask_price)
  return _internal_fifth_ask_price();
}
inline void CybosBidAskTickData::_internal_set_fifth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fifth_ask_price_ = value;
}
inline void CybosBidAskTickData::set_fifth_ask_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fifth_ask_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fifth_ask_price)
}

// uint32 fifth_bid_price = 22;
inline void CybosBidAskTickData::clear_fifth_bid_price() {
  fifth_bid_price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fifth_bid_price() const {
  return fifth_bid_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fifth_bid_price() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fifth_bid_price)
  return _internal_fifth_bid_price();
}
inline void CybosBidAskTickData::_internal_set_fifth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fifth_bid_price_ = value;
}
inline void CybosBidAskTickData::set_fifth_bid_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fifth_bid_price(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fifth_bid_price)
}

// uint32 fifth_ask_remain = 23;
inline void CybosBidAskTickData::clear_fifth_ask_remain() {
  fifth_ask_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fifth_ask_remain() const {
  return fifth_ask_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fifth_ask_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fifth_ask_remain)
  return _internal_fifth_ask_remain();
}
inline void CybosBidAskTickData::_internal_set_fifth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fifth_ask_remain_ = value;
}
inline void CybosBidAskTickData::set_fifth_ask_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fifth_ask_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fifth_ask_remain)
}

// uint32 fifth_bid_remain = 24;
inline void CybosBidAskTickData::clear_fifth_bid_remain() {
  fifth_bid_remain_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::_internal_fifth_bid_remain() const {
  return fifth_bid_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CybosBidAskTickData::fifth_bid_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.fifth_bid_remain)
  return _internal_fifth_bid_remain();
}
inline void CybosBidAskTickData::_internal_set_fifth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fifth_bid_remain_ = value;
}
inline void CybosBidAskTickData::set_fifth_bid_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fifth_bid_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.fifth_bid_remain)
}

// uint64 total_ask_remain = 25;
inline void CybosBidAskTickData::clear_total_ask_remain() {
  total_ask_remain_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosBidAskTickData::_internal_total_ask_remain() const {
  return total_ask_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosBidAskTickData::total_ask_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.total_ask_remain)
  return _internal_total_ask_remain();
}
inline void CybosBidAskTickData::_internal_set_total_ask_remain(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_ask_remain_ = value;
}
inline void CybosBidAskTickData::set_total_ask_remain(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_ask_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.total_ask_remain)
}

// uint64 total_bid_remain = 26;
inline void CybosBidAskTickData::clear_total_bid_remain() {
  total_bid_remain_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosBidAskTickData::_internal_total_bid_remain() const {
  return total_bid_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CybosBidAskTickData::total_bid_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.total_bid_remain)
  return _internal_total_bid_remain();
}
inline void CybosBidAskTickData::_internal_set_total_bid_remain(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_bid_remain_ = value;
}
inline void CybosBidAskTickData::set_total_bid_remain(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_bid_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.total_bid_remain)
}

// int64 out_time_total_ask_remain = 27;
inline void CybosBidAskTickData::clear_out_time_total_ask_remain() {
  out_time_total_ask_remain_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosBidAskTickData::_internal_out_time_total_ask_remain() const {
  return out_time_total_ask_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosBidAskTickData::out_time_total_ask_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.out_time_total_ask_remain)
  return _internal_out_time_total_ask_remain();
}
inline void CybosBidAskTickData::_internal_set_out_time_total_ask_remain(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  out_time_total_ask_remain_ = value;
}
inline void CybosBidAskTickData::set_out_time_total_ask_remain(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_out_time_total_ask_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.out_time_total_ask_remain)
}

// int64 out_time_total_bid_remain = 28;
inline void CybosBidAskTickData::clear_out_time_total_bid_remain() {
  out_time_total_bid_remain_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosBidAskTickData::_internal_out_time_total_bid_remain() const {
  return out_time_total_bid_remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CybosBidAskTickData::out_time_total_bid_remain() const {
  // @@protoc_insertion_point(field_get:stock_api.CybosBidAskTickData.out_time_total_bid_remain)
  return _internal_out_time_total_bid_remain();
}
inline void CybosBidAskTickData::_internal_set_out_time_total_bid_remain(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  out_time_total_bid_remain_ = value;
}
inline void CybosBidAskTickData::set_out_time_total_bid_remain(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_out_time_total_bid_remain(value);
  // @@protoc_insertion_point(field_set:stock_api.CybosBidAskTickData.out_time_total_bid_remain)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace stock_api

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_stock_5fprovider_2eproto
