* collector 끊어짐 문제
    * 포트 50001로 변경
    * NAT Service 로 변경 -> 이후 관찰
    * 초기 subscribe 이후 broadcasting 만 하는데, 왜 collector로 데이터가 들어왔을까?
        * VirtualBox 네트워크 설정에 문제가 있는지 확인(하드웨어 주소등..)

* 왜 잠이 올까?
    * 방향성이 뚜렷하지 않다.
    * 극단적으로 1초로 설정하여, 사고 빠지는 건?
    * Picker 역시, 추가 고려사항 필요
    * 너무 가격만 보지 말자
    * 3초, 5초 평균 가격으로 bottom, top edge 계산, 1초의 평균 거격은 tough
    * 1차 적으로는 시작 - 1분부터 눌린 후 눌림 완료까지의 데이터 수집
    * 거래량 관련 분석
        * 가격대별 매물대(금일 가격별 매물대)
        * Start Trading 이후의 거래량
        * bottom edge 이후의 거래량 (매수, 매도)
    * 호가 관련 분석
        * 호가창 비중 (매수 물량, 매도 물량)
    * 속도 관련
        * 매수 속도, 매도 속도
    * 실제 그래프를 보면서 분석

* 개선 사항
    * 1초 테스트
    * 현재 조건 유지하에서 거래량, 호가 관련 수치 자료를 남겨서 비교


* 단일 종목 Simulation 추가 필요, 어떤 Parameter를 넣었을 때, 최대 수익을 볼 수 있을지 빠르게 확인
    * 매도 알고리즘 개선
* Simulation 에서 Pick Code 시간 조정 (현재 10초, 5분 이내 최대 가격으로 결과 확인)
    * x초 마다 종목 선정, 5분 이내의 최대/최저 가격 확인
    * 종목 선정 개선


* 3월 10일 데이터부터 Tick Simulation 준비

* GUI 구성하여 직접하면 될까?

                                      BUY Setting: Bet당 금액 or 잔액의 xx%
-----------------------------------------------------------
DAY                 || 주체 매수    || bull   정보|| 시간 외 정보     ||  
MINUTE              || BA(Open 가격)||1 sec, 5 sec, 10 sec 1min, today||
TICK                || 거래 증권사  ||            ||                  ||   
KOSPI| KOSDAQ       || 보유 종목    || VI 정보    || 금일 손익        || 
NASDQA | JAPAN(1)   ||각각 손절가등 ||            ||                  ||  
-----------------------------------------------------------
* Bull 정보에서는 지정가나, 바로 매수등 제공
* 보유 종목에서는 손절 설정이나, 바로 매도, 지정가 매도
* BULL 정보는 Refresh 버튼으로 화면 갱신
* BA 화면
    * 20일 60일, 120일 이평선 가격 및 20일, 60일, 120일 최고가, 최저가
    * 금일 Open, 금일 Highest, 금일 Lowest, 현재가 표시

* 현재 방향성
    * 가야할 자리에서의 2지 선다
        * 이평선(20,60,120), VI Supressed, first VI
    * 2지 선다를 BJJ 알고리즘에서 사용할 알고리즘 적용하여, 매매 시도(속도, 거래량)
    * 매매 실패시에도 다시 진입할 수 있는 알고리즘 필요
        * 몇 번 이라도, 조건 맞으면 다시 들어갈 수 있게..

* Features
    * 계좌별로 별도 거래 할 수 있는 API 구성
        * app 에서는 초기 trade_account 설정 가능하게 하면, api 사용시 해당 계좌와 연결
    * 돌파 관련 프로그램
        * 20일선 돌파 등, 특정 가격 돌파시 거래할 수 있게 서비스 구성
            * 서비스 밑에 여러가지 알고리즘이 Client로 연결되어, 서비스에게 코드와 돌파 가격을 전달할 수 있게..
            * 거래는 서비스에서 수행




-----------------------------------------------------------------------------------
Queue
* 3월 2일 데이터, 중간에 문제 발생
* 3월 3일 데이터, 오전에 socket 문제 수정으로 약 9시 30분부터 기록
* 3월 4일 데이터, 중간에 문제 발생
* 3월 5일 데이터, 에러는 없었음

* BJJ 관련 분석
    * 오전 9시에 산 종목 확인하면, 몇 초로 본 건지 확실히 알 수 있음
        * 현재 1분 데이터 확인하는 걸로 보이지만, 시작장에서는 몇초를 보는지 알 수 있음
    * 몇초 타이밍으로 강도 분석?
        * 현재로서는 가격 속도와 거래대금으로 확인
        * 거래가 없는 시간대에서 거래를 하지 않은 이유 분석으로, 조건에 대한 힌트 얻기
        * 다음 거래 발생시 틱 데이터 기반으로 상세 분석
    * 실제 거래가 발생하는 날에 수익률 검사
    * 해당 알고리즘 적용을 위해 약 2000개 항목 Subscribe가 필요한데 전략..
        * BJJ 틱 확인되는 대로, 추가 subscriber 늘리는 방안 추진
        * vvvlife 까지 합치면 vm 4대로 대당 800개, 약 3180개 cover 예상
    * 데이터 처리용 Desktop Machine 활용 필요?


* VI Suppressed 관련 알고리즘 21일 데이터로 분석
* 스윙에서 가야할 자리에서 가는 경우와 못가는 경우 알고리즘
    * 가야할 자리는 이전 고점 돌파 지점 (창원개미 영상 참고)
    * 가야할 자리에서 시간외단일가 확인도 중요
    * 이전 추세 추종 알고리즘 책 들여다보고, 적용 가능한지 확인하기
* _S 데이터 활용 방안이 있을까?

* 상위 10%가 차지하는 물량 검토 (가정: 상위 10%의 물량이 50% 이상이면, 기관이거나 곧 하락 장세)
* BJJ 사용 방법에서 변경하여, VI 이전 호가에서 파는 전략 (5% 이상 8%이하, 10% VI 이전 매도)
    * 5분 속도 (3호가까지의 물량 대비 현재 매수 / 매도 속도)
    * 물량 성분 분석
    * 성공과 실패를 분류하여, 속도와 물량의 적정 값 찾기
    * 전체 적용할 수 있는 파라미터가 있을까? 종목별로 아니면 금일/이전 물량에 맞춰서 뭔가 할 수 있는 게 있을까?


* 금일 데이터 Simulation


* VI Simulator
    * alarm 읽고 나서, 10분 MAVG 로 데이터 만들어, peak 검사
        * 일단 VI 시점 가격으로 다음 아래 peak가 가격 아래에 놓이는지 확인
        * VI 시점 가격 돌파시, VI 지점의 거래량 비교
        * VI 여러번 발생시, 일단은 무시
* Speed Test -> 속도 측정하여, 짧은 시간 내의 가격 변화 추세 읽기(단기, 중기, 장기)

* 예측은 할 수 없다는 결론, 하지만 의미를 부여할 수 있는 숫자는 있다
    * 300억 이상 금액 이후 눌리면서, 외인 기관으로 손바꿈
        * 금액에 너무  매달리지 말기, 상황에 더 집중하자
    * 이전 고점을 넘었다는 의미는 물려있는 사람들의 본전치기 및 단기 스윙의 물량이 나오기 마련이고, 눌려야 정상 -> 이를 급격히 뛰어넘었다면 조금 뒤라도 눌려야 되는게 일반적이지 않을까? 
        * 이전 고점을 강도 세게 넘었다면, 기존 보유자들이 지켜보거나 매도, 강도가 약하다면 눌리지 않을까?

* VI 이후 패턴 검토
    * 물량은?
    * 눌린 후 VI 시 가격 넘으면 확률은?

* VI 자료 수집 프로그램 작성
* 키움 로그인은 하나 프로그램하고, 나머지는 사용이 가능?
* 프로그램당 로그인 필요?

* 10% 이상, 300억 이상 거래 이전에 대해 설명 만들기
    * 거래량 추세
        * 단순 거래량(순매수/매도)
        * 거래량 급등 등..
        * 기관별
        * 외국인
        * 개인
    * 가격 추세
        * 이평선
        * 지지선
    * 공매도, 대차잔고, 개인신용
    * 테마
    * 300억 이상 거래에 대해서는 왜 사서, 언제 팔까에 집중
        * 매수 주체별 확인도 필요
        * 추측보다는 특정상황에서 나온 일정 이상의 거래량 이후의 추세 확인
        * 언제 들어올지는 모르지만, 들어오고 나서 보통 어떻게 대응한다는 확인할 수 있지 않을까? - 큰 금액이 들어와서 개미처럼 거래하지는 않을 것이다

* 추측이 아니라(추측에 의한 일시적이 아닌), 미래를 위해 쌓아갈 수 있는 지식은 무엇인가? 

* 예측의 영역은 컴퓨터의 영역이 아님
    * 평균에서의 과대 이탈, 동시 처리 속도 위주로 구상
    * Base 알고리즘으로 쓸 수 있는 게 있을까? (목표 설정시 약 70% pass 율 아니면10% 이상의 평균(10% 표준 편차))
    * 이평선에 붙어서 변동폭이 적은 경우 향후 변동폭 및 수익 분석
    * 10% 이상이나 300억 이상의 거래량에서 이전 날들의 특징점을 찾을 수 있나?
        * 특징점들을 report해서 테이블 만들기
* Filter를 만드는 경우 Filter 간의 종속성을 알 수 있나? 독립적으로 설계 가능 여부


* { "_id" : ObjectId("5e1d4d4413c5db0eaf3a3a75"), "plus" : true, "type" : [ 0, 2, 1, 2 ], "height" : [ 4, 3, 1, 2 ], "mean" : 1.0854936749389237, "count" : 45, "good" : 35, "bad" : 10 }
    * 변수는 count 가 몇개 이상, good의 percentage, 언제 팔 것인가? (1) 
    * try: mean 이 1.0 넘고, mean 보다 cv가 더 작은 것, 산 경우 다음 top peak 기다리고, 해당 peak 에서 mean 이 1 이상인 경우 hold, 이하인 경우 sell, pattern 안나오는 경우 2번째 peak 에 판다


* 항상 평균에 회귀한다는 가정아래, 할 수 있는 테스팅은?
    * 평균 이전 x일 거래량을 금일 특정 시간에 돌파시?

* Testing
    * 패턴 분석하기, 내가 생각할 때 확실하다는 패턴들이 실제로 어떤 결과로 나오는지 확인 필요
        * 시작점도 포함시키기
        * 예: B(2), T(3), B(1) 의 경우 다음 T가 보통 T3 보다 낮을 거라고 당연시
        * 예: B(1), T(3), B(2) 의 경우 현재가가 T(3)을 넘는 경우 다음 T(4)가 나올것
        * 위의 예외 case 를 보면, 분명 영향을 미치는 다른 변수를 발견할 수 있지 않을까?
        * 예외 case를 본다고 해결되지 않음, 평균 분산 기반으로 해석하는 수 밖에 없음

* 눌리는 경우 2
    * bottom edge 가 발생하고 최저점 일 때(마이너스), 이전 top edge 돌파하는 경우
    * 이 경우, 상승 추세 있는 종목이어야 함

* 그래프를 분류할 수 있는 방법이 있을까? 그래프를 보고, 시간에 맞게 설명해 보기(전날보다 x% 상승한 상태로 시작, 당일 최고점, 이전 저점이 눌렸다가 다시 상승, 이전 top 돌파 등..
    * 주말에 HTS 보면서 연구
    * 일반적인 차트에 대해 설명을 할 수 있을까? 데이터 분석


* 유튜브 주식 통계 관련 목차 준비
    * 그래프는 어떻게 보여주는게?
        * 직접 짜야되지 않을까? - PyQtChart 보다는 Custom Widget으로?
    * 20일 평균선을 넘으면 사고, 내려가면 팔 때 수익?
    * 년도별, 최고점 시간
    * 코스피에서 외인이 x일 연속 x 원 이상 매수알 때 사기

* 가격과 Volume 의 비대칭 찾기
    * 가격의 왜곡을 알 수 있을까? 예를 들어 거래량에 비해 가격이 안올랐다던지 아니면 반대 상황
    * 먼저 일별 데이터로 1 매수 / 1매도가 가격에 얼마나 영향을 주는지 확인해야 하는데, 매수 / 매도 / 가격의 경우는 LinearRegression 으로 풀어야 할 듯..
    * 모멘트를 줄 수 있는 가격 찾기
* 매수세가 높은 종목 중 가장 싼 거 사서 내일 팔기
* 시장 주도주의 정의는?
* 장 마감 전까지 Sell signal 안오는 경우 다음 날 손익 통계? - 주기적 실제 데이터 기반으로 검토
* 수익률 특정 %로 고정했을 때, 승률 (BUY 이후, 고점이 몇인지 기록하면 통계 알 수 있을 듯)
* https://towardsdatascience.com/backtesting-trading-strategies-less-sorcery-and-more-statistics-on-your-side-241ac41d18b0
    * back testing 관련 자료
* pattern match
    목표 : 특정 종목의 1주일 거래량과 가격이 이전 과거 데이터를 통해 유사한 종목 확인, 평균 가격 상승률을 예측
           타당성 : 역사는 반복된다?
    종목 선정
    1개월 volume average  200위까지
    기간 1년

    해당 stock window = 1 week
    1. StandardScaler 통해 volume diff 진행


* 10053 에러 해결
    * 일단 로그상으로는 request_client.py 가 먼저 죽었으나, request_client.py 가 10053을 받음
    * 결론
        * gevent의 windows 에서 socket 관련 문제로 추측
        * eventlet 으로 변경
    * 예측 방안
        * 1. 윈도우 포트 제한 변경 - 가능성 낮음
        * 2. recv 사이즈 4096으로 변경
        * 3. https://support.microsoft.com/ko-kr/help/981344/an-application-may-receive-the-10054-error-when-the-application-receiv 부분 적용 
        * 4. server 로그에서 exception 인지, recv length가 zero인지 로그를 다르게 두어 확인
        * 5. 기존 포트 번호를43100 으로 뒤쪽 번호로 변경
        * 6. RequestClient 에서 message_reader 의 socket 과 
    * Sequence
        * RequestClient 가 12:05 에 socket 10054 받음
        * DB는 12:23 분까지 기록 -> socket read 에러가 발생하였지만, write는 문제 없이 된다?
        * Server 로그는 12:25에 disconnect 이벤트 처리
    * 테스트
        * 소켓을 ==로 비교한 것에서 문제가 발생 아닌듯, fd 가 같더라도 == 는 다름





Version Roadmap
---------------------------------

ver0.1 - 2019/12/31
* Account 와 Bidask 연동 구현 - Done
* 총 금액에서 Watching 하는 좀목만큼 분할 사용 - 개선 필요 - Done
* 2019년 11월 손실 분석 및 보완 / 손익 테스팅 - Done
* Creon 연동 테스팅 - Progressing

ver0.2 - 2020/1/31
* 손실 분석 및 보완 테스팅
* 총 금액에서 Watching 하는 좀목만큼 분할 사용 - unknown 확률에서 2~16 트레이딩을 할 때, 금액 분할을 어떻게?
    * 동시에 이뤄지는 최대 갯수는?
* ver0.1 안정화 및 시스템 refactoring
* VI 발동시 거래량에 따른 확률이 있을까?
* 알고리즘 후보군 찾기
* pattern matching algorithm 적용 아이디어, 7 day / 6 day / 5 day 처럼 순차적 끝점 비교 방법/ Finger Print 처럼 값을 패턴을 상수화할 수 있는 방법이 있는가? 음악 찾기 프로그램에서 쓰는 알고리즘은?
    * Day to Day 간 간격, Day Start / End 격차, Day 내에서의 Trend Line 비교, 거래량 비교
	* https://medium.com/intrasonics/a-fingerprint-for-audio-3b337551a671
	* 중요한 부분은 day to day 간 갭차
	* https://www.youtube.com/playlist?list=PLQVvvaa0QuDe6ZBtkCNWNUbdaBo2vA4RO

ver0.3
* 테스팅을 어떻게 빨리 하여, Feedback 을 받을 수 있을까?
* 테스팅시 데이터 정확도를 어떻게 올릴 수 있을까?
* API Server
* CYBOS 위주로 일단 완성하고, 일반화 작업 진행 (1. DB, 2. 키움 등)

ver1.0




Testing Done
--------------------------
* stage 1 에서 over_price 빼는 경우 수익률 오히려, 낮음 결론
* prominence 로 peak extract 부분 수익률 확인 및 호가에 따른 extract 고려 - 보류
    * 호가 단위일 경우 가격에 따라 차이가 많이 나, 1 tick 상승에도 prominence로 걸러낼 수 없음
* A005290 12월 17일 data 비교(min, real) - Done
     * ISODate("2019-12-17T11:41:01.110Z")
* 기록
    * 비추천 리스크 값
        * 9.07, 8.62, 6.37, 6.77, 6.21, 12.78, 9.98, 20.14, 10.05 8.51, 20.13, 14.56, 19.36, 13.61, 14.62, 15.08, 15.71
        * 오히려 상승한 경우 11.2, 9.3, 9.06, 7.78, 9.3, 8.86, 11.23, 10.83, 12.57
* 2019-12-18 한 종목만 signal 나왔는지 검토


Done
---------------------------
* STX+ETX Packet Testing
* 그래프 나온 부분 확인 후 수정 부분 확인
* Fake Accout에 시간 필요
* Child Counting... 언제 끝날지 어떻게 확인?
* Decision 에서 최종 결정 (BoolAndDecision), Decision은 총 몇개 bool 받는지 인자로 전달
* database로 돌릴 경우 main clock 에 start time을 다른 db로 연결할 필요가 있을지 고려
* Strategy 중에서 특정 값을 전달하는 Reference 도 필요, Decision 에서 참조가 필요한 값들..
    * 예를 들어, Buy 결정을 내릴 시 호가 확인이 필요
* Strategy 에서는 strategy_name:(score or bool) string으로 값을 return
* Decision 에서 전달시 argument는? type:code:
* Strategy 에서 그래프 뽑아내기
* BID / ASK 호가 이동하는 속도로 판단하는 알고리즘 - 결국 가격 이동?
* 20일 선 거래 짜기 - Done
* x 일 최고점을 돌파할 시, 다음일들의 수익률(1달)
* 가격 밴드. 20일 평균선에서 위 아래로 2 std 로 긋고, 가격이 위 아래로 돌파시 밴드 안으로 들어온다는 가정
        * https://pandas.pydata.org/pandas-docs/stable/user_guide/visualization.html
* 거래 테스트 Client
* LONG LIST 받아오기 
* TRADE Client 기능 추가
* 전날 거래량 500위 + LONG LIST까지 Subscribe 시작 Client
    * 전날 거래량 할 필요없이 조건 충족하는 종목 + 매수 종목만 subscribe
* 1분당 -4% 변동성 있을 시 매도, 당일 시작가에서 25% 이상일 경우 매도
* Subscribe 관련 테스트
    * ex) Client가 VI 이벤트 수신 중 종료 -> 다시 수신시 정상 동작 여부
        * 이벤트 subscribe count가 0일 때, STOP
    * Window client에서 고려필요 있을까? 다 Server로 넘기기 때문에, 사실상 문제 발생시 Server 문제이기 때문에, 의미가 있을까?
    * Trade Subscribe 및 Index 등도 확인
* DB / Cybos API 만들기
    * 항상 DB에서 지우고, 다시 insert 하는 것도 burden, DB 에 있는 경우 DB에서 사용, 없는 경우 cybos API 로 얻어와
      append 로 붙이는 거 고려
* VirtualMachine 에서 연결되지 않은 경우, restart
* 테스트
    * Shutdown 테스트
    * STAT 테스트
* VBOX 강제 종료가 아닌 InitiateShutdown 관련 테스트
* 내일 오전: conflict test
* Data Validation 테스트(금일 관련 자료가 정상적으로 수집되었는지 검사)
    * 문제가 있다면, Slack 으로 메시지 전송
    * 초기 시스템 시작 관련도 메시지 전달
* Slack 관련 연동 검토(트레이딩 관련 메시지)
* Speed 에서 값을 보고 특정 max 값 설정하여, 이상 넘으면 max 값으로 고정
    * 이유: max값이 크면, 사실 작은 값들의 스케일을 그래프로 구분할 수가 없음
    * 100개 종목의 15초마다 가장 작은 값으로 매수? 특정 거래대금 이상 필요?
    * Speed 분석 완료 후 효용성 있을 시, VI 이전 호가 전략 테스트 병행?

No important
* 코스피 200 종목 동일하게 추세로 선물 거래는?
* 눌림목
    * 신고가 터지고(몇 일까지 확인?), 3분봉으로 확인, 다음 3개 분봉 이후부터 신고가일 때의 close 돌파 확인 시 매수
        * 다음 3개 분봉 후 이미 급상승일 경우는 포기
    * 손절가는 금일 최저점 or 3% 이하, 매도는 매도 속도 급상승

